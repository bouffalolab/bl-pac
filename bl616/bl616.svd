<?xml version="1.0" encoding="utf-8"?>
<device schemaVersion="1.3" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD.xsd">
  <vendor>Bouffalo Lab</vendor>
  <vendorID>bouffalolab</vendorID>
  <name>BL616/BL618</name>
  <series></series> <!-- todo -->
  <version>1.0</version>
  <description>Bouffalo BL616/BL618 chip series</description>
  <licenseText>
Copyright (c) 2023 Bouffalo Lab
bl616-pac is licensed under Mulan PSL v2.
You can use this software according to the terms and conditions of the Mulan PSL v2.
You may obtain a copy of Mulan PSL v2 at:
         http://license.coscl.org.cn/MulanPSL2
THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND,
EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,
MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
See the Mulan PSL v2 for more details.
  </licenseText>
  <addressUnitBits>8</addressUnitBits>
  <width>64</width>
  <size>32</size>
  <access>read-write</access>
  <resetValue>0x00000000</resetValue>
  <resetMask>0xFFFFFFFF</resetMask>

  <peripherals>
    <peripheral>
      <name>GLB</name>
      <description>Global configuration register</description>
      <baseAddress>0x20000000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>chip_inform</name>
          <description>Chip information register</description>
          <addressOffset>0x000</addressOffset>
          <fields>
            <field>
              <name>ready</name>
              <description>Chip ready signal</description>
              <lsb>27</lsb>
              <msb>27</msb>
            </field>
            <field>
              <name>version</name><!-- todo: verify -->
              <description>Peripheral version</description>
              <lsb>28</lsb>
              <msb>31</msb>
            </field>
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x04</dimIncrement>
          <name>interrupt_state[%s]</name>
          <description>Chip interrupt state register</description>
          <addressOffset>0x050</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x04</dimIncrement>
          <name>interrupt_mask[%s]</name>
          <description>Chip interrupt mask register</description>
          <addressOffset>0x058</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x04</dimIncrement>
          <name>interrupt_clear[%s]</name>
          <description>Chip clear interrupt register</description>
          <addressOffset>0x060</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>clock_config_0</name>
          <description>System clock configuration register 0</description>
          <addressOffset>0x090</addressOffset>
          <fields>
            <field>
              <name>pll</name>
              <description>Enable or disable Phase-Locked Loop</description>
              <lsb>0</lsb>
              <msb>0</msb>
            </field>
            <field>
              <name>fclk</name>
              <description>Enable or disable fast clock</description>
              <lsb>1</lsb>
              <msb>1</msb>
            </field>
            <field>
              <name>hclk</name>
              <description>Enable or disable hibernate clock</description>
              <lsb>2</lsb>
              <msb>2</msb>
            </field>
            <field>
              <name>bclk</name>
              <description>Enable or disable bus clock</description>
              <lsb>3</lsb>
              <msb>3</msb>
            </field>
            <field>
              <name>root_clk_source</name>
              <description>Set source of root clock</description>
              <lsb>6</lsb>
              <msb>7</msb>
            </field>
            <field>
              <name>hclk_divide</name>
              <description>Set divide factor of hibernate clock</description>
              <lsb>8</lsb>
              <msb>15</msb>
            </field>
            <field>
              <name>bclk_divide</name>
              <description>Set divide factor of bus clock</description>
              <lsb>16</lsb>
              <msb>23</msb>
            </field>
          </fields>
        </register>
        <register>
          <name>clock_config_1</name>
          <description>System clock configuration register 1</description>
          <addressOffset>0x094</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>bus_config_0</name>
          <description>Bus configuration register 0</description>
          <addressOffset>0x0A0</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>gpadc_config</name>
          <description>General Purpose Analog-to-digital convert configuration</description>
          <addressOffset>0x110</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>gpdac_config_0</name>
          <description>General Purpose Digital-to-analog convert configuration 0</description>
          <addressOffset>0x120</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>gpdac_config_1</name>
          <description>General Purpose Digital-to-analog convert configuration 1</description>
          <addressOffset>0x124</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>gpdac_config_2</name>
          <description>General Purpose Digital-to-analog convert configuration 2</description>
          <addressOffset>0x128</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>gpdac_config_3</name>
          <description>General Purpose Digital-to-analog convert configuration 3</description>
          <addressOffset>0x12C</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>dma_config_0</name>
          <description>Direct Memory Access configuration 0</description>
          <addressOffset>0x130</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>dma_config_1</name>
          <description>Direct Memory Access configuration 1</description>
          <addressOffset>0x134</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>dma_config_2</name>
          <description>Direct Memory Access configuration 2</description>
          <addressOffset>0x138</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>ir_config_0</name>
          <description>Infrared configuration register 0</description>
          <addressOffset>0x140</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>ir_config_1</name>
          <description>Infrared configuration register 1</description>
          <addressOffset>0x144</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>uart_config</name>
          <description>Universal Asynchronous Receiver/Transmitter configuration</description>
          <addressOffset>0x150</addressOffset>
          <fields>
            <field>
              <name>clock_divide</name>
              <description>Peripheral clock divide factor</description>
              <lsb>0</lsb>
              <msb>2</msb>
            </field>
            <field>
              <name>clock_enable</name>
              <description>Peripheral level clock gate enable</description>
              <lsb>4</lsb>
              <msb>4</msb>
            </field>
            <field>
              <name>hibernate_clock_source</name>
              <description>Reads clock source from hibernate registers</description>
              <lsb>7</lsb>
              <msb>7</msb>
              <access>read-only</access>
            </field>
            <field>
              <name>hibernate_clock_source_2</name>
              <description>Reads clock source from hibernate registers</description>
              <lsb>22</lsb>
              <msb>22</msb>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>uart_signal_0</name>
          <description>Universal Asynchronous Receiver/Transmitter signal configuration 0</description>
          <addressOffset>0x154</addressOffset>
          <writeConstraint>
            <useEnumeratedValues>true</useEnumeratedValues>
          </writeConstraint>
          <fields>
            <field>
              <dim>8</dim>
              <dimIncrement>4</dimIncrement>
              <name>function_0[%s]</name>
              <description>Select peripheral function for UART signal %s</description>
              <lsb>0</lsb>
              <msb>7</msb>
              <enumeratedValues>
                <name>Function</name>
                <enumeratedValue>
                  <name>uart0_rts</name>
                  <description>UART0 Request-to-Send flow control</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>uart0_cts</name>
                  <description>UART0 Clear-to-Send flow control</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>uart0_txd</name>
                  <description>UART0 transmit data</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>uart0_rxd</name>
                  <description>UART0 receive data</description>
                  <value>3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>uart1_rts</name>
                  <description>UART1 Request-to-Send flow control</description>
                  <value>4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>uart1_cts</name>
                  <description>UART1 Clear-to-Send flow control</description>
                  <value>5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>uart1_txd</name>
                  <description>UART1 transmit data</description>
                  <value>6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>uart1_rxd</name>
                  <description>UART1 receive data</description>
                  <value>7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>uart_signal_1</name>
          <description>Universal Asynchronous Receiver/Transmitter signal configuration 1</description>
          <addressOffset>0x158</addressOffset>
          <writeConstraint>
            <useEnumeratedValues>true</useEnumeratedValues>
          </writeConstraint>
          <fields>
            <field>
              <dim>4</dim>
              <dimIncrement>4</dimIncrement>
              <name>function_1[%s]</name>
              <description>Select peripheral function for UART signal %s (offset by 8)</description>
              <lsb>0</lsb>
              <msb>7</msb>
              <enumeratedValues derivedFrom="uart_signal_0.function_0[%s].Function" />
            </field>
          </fields>
        </register>
        <register>
          <name>flash_config</name>
          <description>Serial flash configuration</description>
          <addressOffset>0x170</addressOffset>
          <fields>
            <field>
              <name>clock_divide</name>
              <description>Peripheral clock divide factor</description>
              <lsb>8</lsb>
              <msb>10</msb>
            </field>
            <field>
              <name>clock_enable</name>
              <description>Peripheral level clock gate enable</description>
              <lsb>11</lsb>
              <msb>11</msb>
            </field>
            <field>
              <name>clock_source_0</name>
              <description>Peripheral clock source register 0</description>
              <lsb>12</lsb>
              <msb>13</msb>
            </field>
            <field>
              <name>clock_source_1</name>
              <description>Peripheral clock source register 1</description>
              <lsb>14</lsb>
              <msb>15</msb>
            </field>
          </fields>
        </register>
        <register>
          <name>i2c_config</name>
          <description>Inter-Integrated Circuit bus configuration</description>
          <addressOffset>0x180</addressOffset>
          <fields>
            <field>
              <name>clock_divide</name>
              <description>Peripheral clock divide factor</description>
              <lsb>16</lsb>
              <msb>23</msb>
            </field>
            <field>
              <name>clock_enable</name>
              <description>Peripheral level clock gate enable</description>
              <lsb>24</lsb>
              <msb>24</msb>
            </field>
            <field>
              <name>clock_source</name>
              <description>Peripheral clock source register</description>
              <lsb>25</lsb>
              <msb>25</msb>
            </field>
          </fields>
        </register>
        <register>
          <name>i2s_config</name>
          <description>Inter-IC Sound configuration</description>
          <addressOffset>0x190</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>spi_config</name>
          <description>Serial Peripheral Interface configuration</description>
          <addressOffset>0x1B0</addressOffset>
          <fields>
            <field>
              <name>clock_divide</name>
              <description>Peripheral clock divide factor</description>
              <lsb>0</lsb>
              <msb>4</msb>
            </field>
            <field>
              <name>clock_enable</name>
              <description>Peripheral level clock gate enable</description>
              <lsb>8</lsb>
              <msb>8</msb>
            </field>
            <field>
              <name>clock_source</name>
              <description>Peripheral clock source register</description>
              <lsb>9</lsb>
              <msb>9</msb>
            </field>
            <field>
              <name>pin_swap</name>
              <description>Swap Serial Peripheral Interface pin signals</description>
              <lsb>16</lsb>
              <msb>19</msb>
            </field>
          </fields>
        </register>
        <register>
          <name>pwm_config</name>
          <description>Pulse-Width configuration</description>
          <addressOffset>0x1E0</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>dbi_config</name>
          <description>MIPI Display Bus Interface clock configuration</description>
          <addressOffset>0x1F0</addressOffset>
          <fields>
            <field>
              <name>clock_divide</name>
              <description>Peripheral clock divide factor</description>
              <lsb>0</lsb>
              <msb>4</msb>
            </field>
            <field>
              <name>clock_enable</name>
              <description>Peripheral level clock gate enable</description>
              <lsb>8</lsb>
              <msb>8</msb>
            </field>
            <field>
              <name>clock_source</name>
              <description>Peripheral clock source register</description>
              <lsb>9</lsb>
              <msb>9</msb>
            </field>
          </fields>
        </register>
        <register>
          <name>digit_clock_0</name>
          <description>Digital clock configuration 0</description>
          <addressOffset>0x250</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>digit_clock_1</name>
          <description>Digital clock configuration 1</description>
          <addressOffset>0x254</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>digit_clock_2</name>
          <description>Digital clock configuration 2</description>
          <addressOffset>0x258</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>radio_config</name>
          <description>Radio frequency configuration register</description>
          <addressOffset>0x260</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>debug_config_0</name>
          <description>Debug configuration register 0</description>
          <addressOffset>0x2E0</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>debug_config_1</name>
          <description>Debug configuration register 1</description>
          <addressOffset>0x2E4</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>debug_config_2</name>
          <description>Debug configuration register 2</description>
          <addressOffset>0x2E8</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>debug_config_3</name>
          <description>Debug configuration register 3</description>
          <addressOffset>0x2EC</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>debug_config_4</name>
          <description>Debug configuration register 4</description>
          <addressOffset>0x2F0</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>self_test_0</name>
          <description>Machine Built-in Self Test register 0</description>
          <addressOffset>0x300</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>self_test_1</name>
          <description>Machine Built-in Self Test register 1</description>
          <addressOffset>0x304</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <!-- todo: what does bmx_cfg{0..=6} mean here? -->
        <register>
          <name>audio_config_0</name>
          <description>Audio configuration register 0</description>
          <addressOffset>0x340</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>audio_config_1</name>
          <description>Audio configuration register 1</description>
          <addressOffset>0x344</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>emac_config</name>
          <description>Ethernet Media Access Control configuration</description>
          <addressOffset>0x390</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>sdh_config</name>
          <description>Secure Digital host configuration</description>
          <addressOffset>0x430</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>permit_config</name>
          <description>Permission control peripheral configuration</description>
          <addressOffset>0x490</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>psram_config</name>
          <description>Pseudo Static Random-Access Memory configuration</description>
          <addressOffset>0x620</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>wifi_pll_config_0</name>
          <description>Wireless Fidelity Phase-Locked Loop configuration 0</description>
          <addressOffset>0x810</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>wifi_pll_config_1</name>
          <description>Wireless Fidelity Phase-Locked Loop configuration 1</description>
          <addressOffset>0x814</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>wifi_pll_config_2</name>
          <description>Wireless Fidelity Phase-Locked Loop configuration 2</description>
          <addressOffset>0x818</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>wifi_pll_config_3</name>
          <description>Wireless Fidelity Phase-Locked Loop configuration 3</description>
          <addressOffset>0x81C</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>wifi_pll_config_4</name>
          <description>Wireless Fidelity Phase-Locked Loop configuration 4</description>
          <addressOffset>0x820</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>wifi_pll_config_5</name>
          <description>Wireless Fidelity Phase-Locked Loop configuration 5</description>
          <addressOffset>0x824</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>wifi_pll_config_6</name>
          <description>Wireless Fidelity Phase-Locked Loop configuration 6</description>
          <addressOffset>0x828</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>wifi_pll_config_7</name>
          <description>Wireless Fidelity Phase-Locked Loop configuration 7</description>
          <addressOffset>0x82C</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>wifi_pll_config_8</name>
          <description>Wireless Fidelity Phase-Locked Loop configuration 8</description>
          <addressOffset>0x830</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>wifi_pll_config_9</name>
          <description>Wireless Fidelity Phase-Locked Loop configuration 9</description>
          <addressOffset>0x834</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>wifi_pll_config_10</name>
          <description>Wireless Fidelity Phase-Locked Loop configuration 10</description>
          <addressOffset>0x838</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>wifi_pll_config_11</name>
          <description>Wireless Fidelity Phase-Locked Loop configuration 11</description>
          <addressOffset>0x83C</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>wifi_pll_config_12</name>
          <description>Wireless Fidelity Phase-Locked Loop configuration 12</description>
          <addressOffset>0x840</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>wifi_pll_config_13</name>
          <description>Wireless Fidelity Phase-Locked Loop configuration 13</description>
          <addressOffset>0x844</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>wifi_pll_config_14</name>
          <description>Wireless Fidelity Phase-Locked Loop configuration 14</description>
          <addressOffset>0x848</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>ldo18</name>
          <description>1.8-V Low Dropout Linear Regulator configuration</description>
          <addressOffset>0x884</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <dim>35</dim>
          <dimIncrement>0x04</dimIncrement>
          <name>gpio_config[%s]</name>
          <description>Generic Purpose Input/Output config</description>
          <addressOffset>0x8C4</addressOffset>
          <fields>
            <field>
              <name>pin_mode</name>
              <description>Pin input/output mode switch</description>
              <lsb>30</lsb>
              <msb>31</msb>
              <enumeratedValues>
                <name>PinMode</name>
                <enumeratedValue>
                  <name>output_value</name>
                  <description>Output by `output_value` field</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>set_clear</name>
                  <description>Output set by `output_set` and `output_clear` fields</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>dma_output_value</name>
                  <description>Source from GPIO DMA, output by `output_value`</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>dma_set_clear</name>
                  <description>Source from GPIO DMA, set by `output_set` and `output_clear`</description>
                  <value>3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>input_value</name>
              <description>Input value</description>
              <access>read-only</access>
              <lsb>28</lsb>
              <msb>28</msb>
            </field>
            <field>
              <name>output_clear</name>
              <description>Clear output value to 0\n\n
When sets and clears at the same, only set will take effect.</description>
              <access>write-only</access>
              <lsb>26</lsb>
              <msb>26</msb>
            </field>
            <field>
              <name>output_set</name>
              <description>Set output value to 1\n\n
When sets and clears at the same, only set will take effect.</description>
              <access>write-only</access>
              <lsb>25</lsb>
              <msb>25</msb>
            </field>
            <field>
              <name>output_value</name>
              <description>Output value</description>
              <lsb>24</lsb>
              <msb>24</msb>
            </field>
            <field>
              <name>interrupt_mask</name>
              <description>Pin interrupt mask</description>
              <lsb>22</lsb>
              <msb>22</msb>
            </field>
            <field>
              <name>interrupt_state</name>
              <description>Pin interrupt state</description>
              <access>read-only</access>
              <lsb>21</lsb>
              <msb>21</msb>
            </field>
            <field>
              <name>interrupt_clear</name>
              <description>Clear pin interrupt flag</description>
              <lsb>20</lsb>
              <msb>20</msb>
            </field>
            <field>
              <name>interrupt_mode</name>
              <description>Select pin interrupt mode</description>
              <lsb>16</lsb>
              <msb>19</msb>
              <enumeratedValues>
                <name>InterruptMode</name>
                <enumeratedValue>
                  <name>sync_falling_edge</name>
                  <description>Synchronous interrupt in falling edge</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>sync_rising_edge</name>
                  <description>Synchronous interrupt in rising edge</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>sync_low_level</name>
                  <description>Synchronous interrupt in low level</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>sync_high_level</name>
                  <description>Synchronous interrupt in high level</description>
                  <value>3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>sync_both_edges</name>
                  <description>Synchronous interrupt in both rising and falling edges</description>
                  <value>4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>async_falling_edge</name>
                  <description>Asynchronous interrupt in falling edge</description>
                  <value>8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>async_rising_edge</name>
                  <description>Asynchronous interrupt in rising edge</description>
                  <value>9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>async_low_level</name>
                  <description>Asynchronous interrupt in low level</description>
                  <value>10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>async_high_level</name>
                  <description>Asynchronous interrupt in high level</description>
                  <value>11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>alternate</name>
              <description>Pin alternate function switch</description>
              <lsb>8</lsb>
              <msb>12</msb>
              <enumeratedValues>
                <name>Alternate</name>
                <enumeratedValue>
                  <name>sdh</name>
                  <description>Secure Digital host</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>spi0</name>
                  <description>Serial Peripheral Interface 0</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>flash</name>
                  <description>Flash control</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>i2s0</name>
                  <description>Inter-IC Sound 0</description>
                  <value>3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>pdm</name>
                  <description>Pulse Density Modulation</description>
                  <value>4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>i2c0</name>
                  <description>Inter-Integrated Circuit bus 0</description>
                  <value>5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>i2c1</name>
                  <description>Inter-Integrated Circuit bus 1</description>
                  <value>6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>uart0</name>
                  <description>Universal Asynchronous Receiver/Transmitter 0</description>
                  <value>7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>emac</name>
                  <description>Ethernet Media Access Control</description>
                  <value>8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>cam</name>
                  <description>??</description><!-- todo -->
                  <value>9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>analog</name>
                  <description>??</description><!-- todo -->
                  <value>10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>gpio</name>
                  <description>Generic Purpose Input/Output</description>
                  <value>11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>sdio</name>
                  <description>??</description><!-- todo -->
                  <value>12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>pwm0</name>
                  <description>Pulse-Width Modulation module 0</description>
                  <value>16</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>jtag</name>
                  <description>??</description><!-- todo -->
                  <value>17</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>uart1</name>
                  <description>Universal Asynchronous Receiver/Transmitter 1</description>
                  <value>18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>pwm1</name>
                  <description>Pulse-Width Modulation 1</description>
                  <value>19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>spi1</name>
                  <description>Serial Peripheral Interface 1</description>
                  <value>20</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>i2s1</name>
                  <description>Inter-IC Sound 1</description>
                  <value>21</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>dbi_b</name>
                  <description>??</description><!-- todo -->
                  <value>22</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>dbi_c</name>
                  <description>??</description><!-- todo -->
                  <value>23</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>qspi</name>
                  <description>??</description><!-- todo -->
                  <value>24</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>apwm</name>
                  <description>Audio Pulse-Width Modulation</description>
                  <value>25</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>clock_out</name>
                  <description>Clock output</description>
                  <value>31</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>output_function</name>
              <description>Enable output signal</description>
              <lsb>6</lsb>
              <msb>6</msb>
            </field>
            <field>
              <name>pull_down</name>
              <description>Enable internal pull-down</description>
              <lsb>5</lsb>
              <msb>5</msb>
            </field>
            <field>
              <name>pull_up</name>
              <description>Enable internal pull-up</description>
              <lsb>4</lsb>
              <msb>4</msb>
            </field>
            <field>
              <name>drive</name>
              <description>Drive strength</description>
              <lsb>2</lsb>
              <msb>3</msb>
            </field>
            <field>
              <name>schmitt</name>
              <description>Enable schmitt trigger</description>
              <lsb>1</lsb>
              <msb>1</msb>
            </field>
            <field>
              <name>input_function</name>
              <description>Enable input signal</description>
              <lsb>0</lsb>
              <msb>0</msb>
            </field>
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x04</dimIncrement>
          <name>gpio_input[%s]</name>
          <description>Read value from Generic Purpose Input/Output pins</description>
          <addressOffset>0xAC4</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x04</dimIncrement>
          <name>gpio_output[%s]</name>
          <description>Write value to Generic Purpose Input/Output pins</description>
          <addressOffset>0xAE4</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x04</dimIncrement>
          <name>gpio_set[%s]</name>
          <description>Set pin output value to high</description>
          <addressOffset>0xAEC</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x04</dimIncrement>
          <name>gpio_clear[%s]</name>
          <description>Set pin output value to low</description>
          <addressOffset>0xAF4</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
      </registers>
    </peripheral>
    <!-- todo: MIX: 0x20001000? -->
    <peripheral>
      <name>GPIP</name>
      <description>Generic DAC and ADC interface control</description>
      <baseAddress>0x20002000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>gpadc_config</name>
          <description>Generic Analog-to-Digital Converter register</description>
          <addressOffset>0x00</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>gpadc_dma_read</name>
          <description>DMA data output of Generic Analog-to-Digital Converter</description>
          <addressOffset>0x04</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>gpdac_config</name>
          <description>Generic Digital-to-Analog Converter register</description>
          <addressOffset>0x40</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>gpdac_dma_config</name>
          <description>Digital-to-Analog Converter DMA configuration</description>
          <addressOffset>0x44</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>gpdac_dma_write</name>
          <description>DMA data input of Generic Digital-to-Analog Converter</description>
          <addressOffset>0x48</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>gpdac_fifo_state</name>
          <description>Transmit FIFO state of Generic Digital-to-Analog Converter</description>
          <addressOffset>0x4C</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
      </registers>
    </peripheral>
    <!-- todo: PHY_BASE = 0x20002800? -->
    <peripheral>
      <name>AGC</name>
      <description>Automatic Gain Control</description>
      <baseAddress>0x20002C00</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size> <!-- todo -->
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>todo</name>
          <description>??</description>
          <addressOffset>0</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
      </registers>
    </peripheral>
    <!-- todo: SEC_DBG = 0x20003000? -->
    <peripheral>
      <name>SEC</name>
      <description>Digest, Encryption and Signing accelerator</description>
      <baseAddress>0x20004000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>todo</name>
          <description>??</description>
          <addressOffset>0</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>PERMIT</name>
      <description>Peripheral and memory access permission</description>
      <baseAddress>0x20005000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>todo</name>
          <description>??</description>
          <addressOffset>0</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
      </registers>
    </peripheral>
    <!-- todo: TRUST_NS = 0x20006000? -->
    <peripheral>
      <dim>2</dim>
      <dimIncrement>0x100</dimIncrement>
      <name>UART[%s]</name>
      <description>Universal Asynchronous Receiver Transmitter</description>
      <baseAddress>0x2000A000</baseAddress>
      <access>read-write</access>
      <addressBlock>
        <offset>0</offset>
        <size>0x100</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>transmit_config</name>
          <description>Transmit configuration register</description>
          <addressOffset>0x00</addressOffset>
          <resetValue>0x00008f00</resetValue>
          <resetMask>0xffffffff</resetMask>
          <fields>
            <field>
              <name>transfer_length</name>
              <description>Length of words per UART transmit transfer\n\n
This field is ignored when `freerun` mode is enabled.</description>
              <lsb>16</lsb>
              <msb>31</msb>
            </field>
            <field>
              <name>break_bits</name>
              <description>Number of break bits for LIN protocol</description>
              <lsb>13</lsb>
              <msb>15</msb>
            </field>
            <field>
              <name>stop_bits</name>
              <description>Number of stop bits</description>
              <lsb>11</lsb>
              <msb>12</msb>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues>
                <enumeratedValue>
                  <name>zero_p_five</name>
                  <description>0.5 stop bits</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>one</name>
                  <description>1 stop bit</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>one_p_five</name>
                  <description>1.5 stop bits</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>two</name>
                  <description>2 stop bits</description>
                  <value>3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>word_length</name>
              <description>Bit count for each transmit data word</description>
              <lsb>8</lsb>
              <msb>10</msb>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues>
                <enumeratedValue>
                  <name>five</name>
                  <description>Each word includes 5 bits</description>
                  <value>4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>six</name>
                  <description>Each word includes 6 bits</description>
                  <value>5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>seven</name>
                  <description>Each word includes 7 bits</description>
                  <value>6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>eight</name>
                  <description>Each word includes 8 bits</description>
                  <value>7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ir_inverse</name>
              <description>Inverse transmit signal output in IR mode</description>
              <lsb>7</lsb>
              <msb>7</msb>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues>
                <enumeratedValue>
                  <name>inverse</name>
                  <description>Inverse transmit input in IR mode</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_inverse</name>
                  <description>Don't inverse transmit input in IR mode</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ir_transmit</name>
              <description>Enable IR transmit mode</description>
              <lsb>6</lsb>
              <msb>6</msb>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Enable IR transmit mode</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Disable IR transmit mode</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>parity_mode</name>
              <description>Select transmit parity mode if enabled</description>
              <lsb>5</lsb>
              <msb>5</msb>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues>
                <enumeratedValue>
                  <name>odd</name>
                  <description>Odd parity if `parity_enable` is set</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>even</name>
                  <description>Even parity if `parity_enable` is set</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>parity_enable</name>
              <description>Enable transmit parity check</description>
              <lsb>4</lsb>
              <msb>4</msb>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Enable transmit parity check</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Disable transmit parity check</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>lin_transmit</name>
              <description>Local Interconnect Network protocol enable</description>
              <lsb>3</lsb>
              <msb>3</msb>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Enable Local Interconnect Network protocol</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Disable Local Interconnect Network protocol</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>freerun</name>
              <description>Enable freerun mode</description>
              <lsb>2</lsb>
              <msb>2</msb>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Enable freerun mode</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Disable freerun mode</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>cts</name>
              <description>Enable Clear-to-Send flow control signal</description>
              <lsb>1</lsb>
              <msb>1</msb>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Enable Clear-to-Send flow control signal</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Disable Clear-to-Send flow control signal</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>function</name>
              <description>Enable transmit function</description>
              <lsb>0</lsb>
              <msb>0</msb>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Enable UART receive function signal</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Disable UART receive function signal</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>receive_config</name>
          <description>Receive configuration register</description>
          <addressOffset>0x04</addressOffset>
          <resetValue>0x00000700</resetValue>
          <resetMask>0xffffffff</resetMask>
          <fields>
            <field>
              <name>transfer_length</name>
              <description>Length of words per UART receive transfer</description>
              <lsb>16</lsb>
              <msb>31</msb>
            </field>
            <field>
              <name>deglitch_cycle</name>
              <description>De-glitch function cycle count</description>
              <lsb>12</lsb>
              <msb>15</msb>
            </field>
            <field>
              <name>deglitch_enable</name>
              <description>Enable receive de-glitch function</description>
              <lsb>11</lsb>
              <msb>11</msb>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Enable de-glitch function upon receive</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Disable de-glitch function upon receive</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>word_length</name>
              <description>Bit count for each receive data word</description>
              <lsb>8</lsb>
              <msb>10</msb>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues>
                <enumeratedValue>
                  <name>five</name>
                  <description>Each word includes 5 bits</description>
                  <value>4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>six</name>
                  <description>Each word includes 6 bits</description>
                  <value>5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>seven</name>
                  <description>Each word includes 7 bits</description>
                  <value>6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>eight</name>
                  <description>Each word includes 8 bits</description>
                  <value>7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ir_inverse</name>
              <description>Inverse receive signal output in IR mode</description>
              <lsb>7</lsb>
              <msb>7</msb>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues>
                <enumeratedValue>
                  <name>inverse</name>
                  <description>Inverse receive input in IR mode</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_inverse</name>
                  <description>Don't inverse receive input in IR mode</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ir_receive</name>
              <description>Enable IR receive mode</description>
              <lsb>6</lsb>
              <msb>6</msb>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Enable IR receive mode</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Disable IR receive mode</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>parity_mode</name>
              <description>Select receive parity mode if enabled</description>
              <lsb>5</lsb>
              <msb>5</msb>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues>
                <enumeratedValue>
                  <name>odd</name>
                  <description>Odd parity if `parity_enable` is set</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>even</name>
                  <description>Even parity if `parity_enable` is set</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>parity_enable</name>
              <description>Enable receive parity check</description>
              <lsb>4</lsb>
              <msb>4</msb>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Enable receive parity check</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Disable receive parity check</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>lin_receive</name>
              <description>Local Interconnect Network protocol enable</description>
              <lsb>3</lsb>
              <msb>3</msb>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Enable Local Interconnect Network protocol</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Disable Local Interconnect Network protocol</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>auto_baudrate</name>
              <description>Enable receive auto baudrate detection</description>
              <lsb>1</lsb>
              <msb>1</msb>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Enable auto baudrate upon receive</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Disable auto baudrate upon receive</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>function</name>
              <description>Enable receive function</description>
              <lsb>0</lsb>
              <msb>0</msb>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Enable UART receive function signal</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Disable UART receive function signal</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>bit_period</name>
          <description>Bit period control register</description>
          <addressOffset>0x08</addressOffset>
          <resetValue>0x00ff00ff</resetValue>
          <resetMask>0xffffffff</resetMask>
          <fields>
            <field>
              <name>receive</name>
              <description>Period of each receive bit\n\n
Add 1 to this value and divide by clock to get receive baudrate.</description>
              <lsb>16</lsb>
              <msb>31</msb>
            </field>
            <field>
              <name>transmit</name>
              <description>Period of each transmit bit\n\n
Add 1 to this value and divide by clock to get transmit baudrate.</description>
              <lsb>0</lsb>
              <msb>15</msb>
            </field>
          </fields>
        </register>
        <register>
          <name>data_config</name>
          <description>Data configuration register</description>
          <addressOffset>0x0C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xffffffff</resetMask>
          <writeConstraint>
            <useEnumeratedValues>true</useEnumeratedValues>
          </writeConstraint>
          <fields>
            <field>
              <name>bit_order</name>
              <description>Enable bit inverse in each data word</description>
              <lsb>0</lsb>
              <msb>0</msb>
              <enumeratedValues>
                <enumeratedValue>
                  <name>inverse</name>
                  <description>Each byte is sent out MSB-first</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_inverse</name>
                  <description>Each byte is sent out LSB-first</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>transmit_position</name>
          <description>IR-mode transmit position control</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x009f0070</resetValue>
          <resetMask>0xffffffff</resetMask>
          <fields>
            <field>
              <name>stop</name>
              <description>Stop position of transmit IR pulse</description>
              <lsb>16</lsb>
              <msb>31</msb>
            </field>
            <field>
              <name>start</name>
              <description>Start position of transmit IR pulse</description>
              <lsb>0</lsb>
              <msb>15</msb>
            </field>
          </fields>
        </register>
        <register>
          <name>receive_position</name>
          <description>IR-mode receive position control</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0000006f</resetValue>
          <resetMask>0xffffffff</resetMask>
          <fields>
            <field>
              <name>start</name>
              <description>Start position of received pulse recovered from IR signal</description>
              <lsb>0</lsb>
              <msb>15</msb>
            </field>
          </fields>
        </register>
        <register>
          <name>receive_timeout</name>
          <description>Receive Time-Out interrupt control</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0000000f</resetValue>
          <resetMask>0xffffffff</resetMask>
          <fields>
            <field>
              <name>value</name>
              <description>Timeout interrupt triggering value by bits received</description>
              <!-- todo: what's 'bit time'? -->
              <lsb>0</lsb>
              <msb>7</msb>
            </field>
          </fields>
        </register>
        <register>
          <name>signal_override</name>
          <description>Manual override of flow control signal</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xffffffff</resetMask>
          <writeConstraint>
            <useEnumeratedValues>true</useEnumeratedValues>
          </writeConstraint>
          <fields>
            <field>
              <name>rts_value</name>
              <description>Value to override Request-to-Send signal if override is enabled</description>
              <lsb>3</lsb>
              <msb>3</msb>
              <enumeratedValues>
                <name>SignalAssert</name>
                <enumeratedValue>
                  <name>high</name>
                  <description>Assert this signal</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>low</name>
                  <description>Deassert this signal</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>rts_signal</name>
              <description>Enable manual override of Request-to-Send flow control signal</description>
              <lsb>2</lsb>
              <msb>2</msb>
              <enumeratedValues>
                <name>OverrideEnable</name>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Enable manual override of this signal</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Disable manual override of this signal</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>transmit_value</name>
              <description>Value to override transmit signal if override is enabled</description>
              <lsb>1</lsb>
              <msb>1</msb>
              <enumeratedValues derivedFrom="rts_value.SignalAssert" />
            </field>
            <field>
              <name>transmit_signal</name>
              <description>Enable manual override of transmit signal</description>
              <lsb>0</lsb>
              <msb>0</msb>
              <enumeratedValues derivedFrom="rts_signal.OverrideEnable" />
            </field>
          </fields>
        </register>
        <register>
          <name>interrupt_state</name>
          <description>Interrupt state register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x00000004</resetValue>
          <resetMask>0xffffffff</resetMask>
          <access>read-only</access>
          <writeConstraint>
            <useEnumeratedValues>true</useEnumeratedValues>
          </writeConstraint>
          <fields>
            <field>
              <name>auto_baudrate_five_five</name>
              <description>Receive auto baudrate detection finished using 0x55 occurred</description>
              <lsb>11</lsb>
              <msb>11</msb>
              <enumeratedValues>
                <name>InterruptState</name>
                <enumeratedValue>
                  <name>has_interrupt</name>
                  <description>Has interrupt</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_interrupt</name>
                  <description>No interrupt occurred</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>auto_baudrate_start_bit</name>
              <description>Receive auto baudrate detection finished using start bit occurred</description>
              <lsb>10</lsb>
              <msb>10</msb>
              <enumeratedValues derivedFrom="InterruptState" />
            </field>
            <field>
              <name>receive_byte_count</name>
              <description>Receive byte count reached occurred</description>
              <lsb>9</lsb>
              <msb>9</msb>
              <enumeratedValues derivedFrom="InterruptState" />
            </field>
            <field>
              <name>receive_sync_error</name>
              <description>Receive LIN mode synchronization field error occurred</description>
              <lsb>8</lsb>
              <msb>8</msb>
              <enumeratedValues derivedFrom="InterruptState" />
            </field>
            <field>
              <name>receive_fifo_error</name>
              <description>Receive FIFO overflow or underflow occurred</description>
              <lsb>7</lsb>
              <msb>7</msb>
              <enumeratedValues derivedFrom="InterruptState" />
            </field>
            <field>
              <name>transmit_fifo_error</name>
              <description>Transmit FIFO overflow or underflow occurred</description>
              <lsb>6</lsb>
              <msb>6</msb>
              <enumeratedValues derivedFrom="InterruptState" />
            </field>
            <field>
              <name>receive_parity</name>
              <description>Receive parity check failure occurred</description>
              <lsb>5</lsb>
              <msb>5</msb>
              <enumeratedValues derivedFrom="InterruptState" />
            </field>
            <field>
              <name>receive_timeout</name>
              <description>Receive timed-out interrupt occurred</description>
              <lsb>4</lsb>
              <msb>4</msb>
              <enumeratedValues derivedFrom="InterruptState" />
            </field>
            <field>
              <name>receive_fifo_ready</name>
              <description>Receive FIFO ready signal raised</description>
              <lsb>3</lsb>
              <msb>3</msb>
              <enumeratedValues derivedFrom="InterruptState" />
            </field>
            <field>
              <name>transmit_fifo_ready</name>
              <description>Transmit FIFO ready signal raised</description>
              <lsb>2</lsb>
              <msb>2</msb>
              <enumeratedValues derivedFrom="InterruptState" />
            </field>
            <field>
              <name>receive_transfer</name>
              <description>Receive transfer finish signal raised</description>
              <lsb>1</lsb>
              <msb>1</msb>
              <enumeratedValues derivedFrom="InterruptState" />
            </field>
            <field>
              <name>transmit_transfer</name>
              <description>Transmit transfer finish signal raised</description>
              <lsb>0</lsb>
              <msb>0</msb>
              <enumeratedValues derivedFrom="InterruptState" />
            </field>
          </fields>
        </register>
        <register>
          <name>interrupt_mask</name>
          <description>Interrupt mask register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x00000fff</resetValue>
          <resetMask>0xffffffff</resetMask>
          <writeConstraint>
            <useEnumeratedValues>true</useEnumeratedValues>
          </writeConstraint>
          <fields>
            <field>
              <name>auto_baudrate_five_five</name>
              <description>Receive auto baudrate detection finished using 0x55 occurred</description>
              <lsb>11</lsb>
              <msb>11</msb>
              <enumeratedValues>
                <name>InterruptMask</name>
                <enumeratedValue>
                  <name>mask</name>
                  <description>Mask interrupt</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unmask</name>
                  <description>Unmask interrupt</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>auto_baudrate_start_bit</name>
              <description>Receive auto baudrate detection finished using start bit interrupt mask</description>
              <lsb>10</lsb>
              <msb>10</msb>
              <enumeratedValues derivedFrom="InterruptMask" />
            </field>
            <field>
              <name>receive_byte_count</name>
              <description>Receive byte count reached interrupt mask</description>
              <lsb>9</lsb>
              <msb>9</msb>
              <enumeratedValues derivedFrom="InterruptMask" />
            </field>
            <field>
              <name>receive_sync_error</name>
              <description>Receive LIN mode synchronization field error interrupt mask</description>
              <lsb>8</lsb>
              <msb>8</msb>
              <enumeratedValues derivedFrom="InterruptMask" />
            </field>
            <field>
              <name>receive_fifo_error</name>
              <description>Receive FIFO overflow or underflow interrupt mask</description>
              <lsb>7</lsb>
              <msb>7</msb>
              <enumeratedValues derivedFrom="InterruptMask" />
            </field>
            <field>
              <name>transmit_fifo_error</name>
              <description>Transmit FIFO overflow or underflow interrupt mask</description>
              <lsb>6</lsb>
              <msb>6</msb>
              <enumeratedValues derivedFrom="InterruptMask" />
            </field>
            <field>
              <name>receive_parity</name>
              <description>Receive parity check failure interrupt mask</description>
              <lsb>5</lsb>
              <msb>5</msb>
              <enumeratedValues derivedFrom="InterruptMask" />
            </field>
            <field>
              <name>receive_timeout</name>
              <description>Receive timed-out interrupt mask</description>
              <lsb>4</lsb>
              <msb>4</msb>
              <enumeratedValues derivedFrom="InterruptMask" />
            </field>
            <field>
              <name>receive_fifo_ready</name>
              <description>Receive FIFO ready signal interrupt mask</description>
              <lsb>3</lsb>
              <msb>3</msb>
              <enumeratedValues derivedFrom="InterruptMask" />
            </field>
            <field>
              <name>transmit_fifo_ready</name>
              <description>Transmit FIFO ready signal interrupt mask</description>
              <lsb>2</lsb>
              <msb>2</msb>
              <enumeratedValues derivedFrom="InterruptMask" />
            </field>
            <field>
              <name>receive_transfer</name>
              <description>Receive transfer finish signal interrupt mask</description>
              <lsb>1</lsb>
              <msb>1</msb>
              <enumeratedValues derivedFrom="InterruptMask" />
            </field>
            <field>
              <name>transmit_transfer</name>
              <description>Transmit transfer finish signal interrupt mask</description>
              <lsb>0</lsb>
              <msb>0</msb>
              <enumeratedValues derivedFrom="InterruptMask" />
            </field>
          </fields>
        </register>
        <register>
          <name>interrupt_clear</name>
          <description>Clear interrupt register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xffffffff</resetMask>
          <access>write-only</access>
          <writeConstraint>
            <useEnumeratedValues>true</useEnumeratedValues>
          </writeConstraint>
          <fields>
            <field>
              <name>auto_baudrate_five_five</name>
              <description>Write 1 to clear receive auto baudrate detection finished using 0x55</description>
              <lsb>11</lsb>
              <msb>11</msb>
              <enumeratedValues>
                <name>InterruptClear</name>
                <enumeratedValue>
                  <name>clear</name>
                  <description>Write 1 to clear interrupt state</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>auto_baudrate_start_bit</name>
              <description>Write 1 to clear receive auto baudrate detection finished using start bit</description>
              <lsb>10</lsb>
              <msb>10</msb>
              <enumeratedValues derivedFrom="InterruptClear" />
            </field>
            <field>
              <name>receive_byte_count</name>
              <description>Write 1 to clear receive byte count reached</description>
              <lsb>9</lsb>
              <msb>9</msb>
              <enumeratedValues derivedFrom="InterruptClear" />
            </field>
            <field>
              <name>receive_sync_error</name>
              <description>Write 1 to clear receive LIN mode synchronization field error</description>
              <lsb>8</lsb>
              <msb>8</msb>
              <enumeratedValues derivedFrom="InterruptClear" />
            </field>
            <field>
              <name>receive_parity</name>
              <description>Write 1 to clear receive parity check failure</description>
              <lsb>5</lsb>
              <msb>5</msb>
              <enumeratedValues derivedFrom="InterruptClear" />
            </field>
            <field>
              <name>receive_timeout</name>
              <description>Write 1 to clear receive timed-out</description>
              <lsb>4</lsb>
              <msb>4</msb>
              <enumeratedValues derivedFrom="InterruptClear" />
            </field>
            <field>
              <name>receive_transfer</name>
              <description>Write 1 to clear receive transfer finish signal</description>
              <lsb>1</lsb>
              <msb>1</msb>
              <enumeratedValues derivedFrom="InterruptClear" />
            </field>
            <field>
              <name>transmit_transfer</name>
              <description>Write 1 to clear transmit transfer finish signal</description>
              <lsb>0</lsb>
              <msb>0</msb>
              <enumeratedValues derivedFrom="InterruptClear" />
            </field>
          </fields>
        </register>
        <register>
          <name>interrupt_enable</name>
          <description>Interrupt enable register</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x000000ff</resetValue>
          <resetMask>0xffffffff</resetMask>
          <writeConstraint>
            <useEnumeratedValues>true</useEnumeratedValues>
          </writeConstraint>
          <fields>
            <field>
              <name>auto_baudrate_five_five</name>
              <description>Receive auto baudrate detection finished using 0x55 interrupt enable</description>
              <lsb>11</lsb>
              <msb>11</msb>
              <enumeratedValues>
                <name>InterruptEnable</name>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Enable interrupt</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Disable interrupt</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>auto_baudrate_start_bit</name>
              <description>Receive auto baudrate detection finished using start bit interrupt enable</description>
              <lsb>10</lsb>
              <msb>10</msb>
              <enumeratedValues derivedFrom="InterruptEnable" />
            </field>
            <field>
              <name>receive_byte_count</name>
              <description>Receive byte count reached interrupt enable</description>
              <lsb>9</lsb>
              <msb>9</msb>
              <enumeratedValues derivedFrom="InterruptEnable" />
            </field>
            <field>
              <name>receive_sync_error</name>
              <description>Receive LIN mode synchronization field error interrupt enable</description>
              <lsb>8</lsb>
              <msb>8</msb>
              <enumeratedValues derivedFrom="InterruptEnable" />
            </field>
            <field>
              <name>receive_fifo_error</name>
              <description>Receive FIFO overflow or underflow interrupt enable</description>
              <lsb>7</lsb>
              <msb>7</msb>
              <enumeratedValues derivedFrom="InterruptEnable" />
            </field>
            <field>
              <name>transmit_fifo_error</name>
              <description>Transmit FIFO overflow or underflow interrupt enable</description>
              <lsb>6</lsb>
              <msb>6</msb>
              <enumeratedValues derivedFrom="InterruptEnable" />
            </field>
            <field>
              <name>receive_parity</name>
              <description>Receive parity check failure interrupt enable</description>
              <lsb>5</lsb>
              <msb>5</msb>
              <enumeratedValues derivedFrom="InterruptEnable" />
            </field>
            <field>
              <name>receive_timeout</name>
              <description>Receive timed-out interrupt enable</description>
              <lsb>4</lsb>
              <msb>4</msb>
              <enumeratedValues derivedFrom="InterruptEnable" />
            </field>
            <field>
              <name>receive_fifo_ready</name>
              <description>Receive FIFO ready signal interrupt enable</description>
              <lsb>3</lsb>
              <msb>3</msb>
              <enumeratedValues derivedFrom="InterruptEnable" />
            </field>
            <field>
              <name>transmit_fifo_ready</name>
              <description>Transmit FIFO ready signal interrupt enable</description>
              <lsb>2</lsb>
              <msb>2</msb>
              <enumeratedValues derivedFrom="InterruptEnable" />
            </field>
            <field>
              <name>receive_transfer</name>
              <description>Receive transfer signal interrupt enable</description>
              <lsb>1</lsb>
              <msb>1</msb>
              <enumeratedValues derivedFrom="InterruptEnable" />
            </field>
            <field>
              <name>transmit_transfer</name>
              <description>Transmit transfer signal interrupt enable</description>
              <lsb>0</lsb>
              <msb>0</msb>
              <enumeratedValues derivedFrom="InterruptEnable" />
            </field>
          </fields>
        </register>
        <register>
          <name>bus_state</name>
          <description>Bus state register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xffffffff</resetMask>
          <access>read-only</access>
          <fields>
            <field>
              <name>receive_busy</name>
              <description>Indicates that UART receive bus is busy</description>
              <lsb>1</lsb>
              <msb>1</msb>
              <enumeratedValues>
                <name>BusBusy</name>
                <enumeratedValue>
                  <name>busy</name>
                  <description>Bus is busy</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>idle</name>
                  <description>Bus is not busy</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>transmit_busy</name>
              <description>Indicates that UART transmit bus is busy</description>
              <lsb>0</lsb>
              <msb>0</msb>
              <enumeratedValues derivedFrom="BusBusy" />
            </field>
          </fields>
        </register>
        <register>
          <name>auto_baudrate</name>
          <description>Auto baudrate detection register</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xffffffff</resetMask>
          <access>read-only</access>
          <fields>
            <field>
              <name>by_five_five</name>
              <description>Bit period of auto baudrate detection using codeword 0x55</description>
              <lsb>16</lsb>
              <msb>31</msb>
            </field>
            <field>
              <name>by_start_bit</name>
              <description>Bit period of auto baudrate detection using start bit</description>
              <lsb>0</lsb>
              <msb>15</msb>
            </field>
          </fields>
        </register>
        <!-- todo:  
        related to auto baudrate
        /* 0x38 : urx_abr_prd_b01 */
        /* 0x3C : urx_abr_prd_b23 */
        /* 0x40 : urx_abr_prd_b45 */
        /* 0x44 : urx_abr_prd_b67 */
        -->
        <register>
          <name>pulse_tolerance</name>
          <description>Pulse width tolerance for auto baudrate</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x00000003</resetValue>
          <resetMask>0xffffffff</resetMask>
          <writeConstraint>
            <useEnumeratedValues>true</useEnumeratedValues>
          </writeConstraint>
          <fields>
            <field>
              <name>by_five_five</name>
              <description>Pulse width tolerance of auto baudrate detection using codeword 0x55</description>
              <lsb>0</lsb>
              <msb>7</msb>
            </field>
          </fields>
        </register>
        <!-- todo: 0x50: urx_bcr_int_cfg -->
        <register>
          <name>rs485_transmit</name>
          <description>RS-485 mode transmit configuration</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x00000002</resetValue>
          <resetMask>0xffffffff</resetMask>
          <fields>
            <field>
              <name>polarity</name>
              <description>RS-485 pin polarity of Driver Enable (DE) pin</description>
              <lsb>1</lsb>
              <msb>1</msb>
              <enumeratedValues>
                <name>Polarity</name>
                <enumeratedValue>
                  <name>active_high</name>
                  <description>Driver Enable (DE) pin is active high</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>active_low</name>
                  <description>Driver Enable (DE) pin is active low</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>function</name>
              <description>RS-485 transceiver mode enable</description>
              <lsb>0</lsb>
              <msb>0</msb>
              <enumeratedValues>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Enable RS-485 transceiver mode\n\n
The peripheral is connected to RS-485 transceiver, and RTS signal output becomes Driver Enable (DE) signal.</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Disable RS-485 transceiver mode\n\n
The peripheral operates as normal UART.</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>fifo_config_0</name>
          <description>FIFO configuration register 0</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xffffffff</resetMask>
          <writeConstraint>
            <useEnumeratedValues>true</useEnumeratedValues>
          </writeConstraint>
          <fields>
            <field>
              <name>receive_underflow</name>
              <description>Receive FIFO underflow flag\n\n
Can be cleared using `receive_clear`.</description>
              <lsb>7</lsb>
              <msb>7</msb>
              <access>read-only</access>
              <enumeratedValues>
                <name>HasUnderflow</name>
                <enumeratedValue>
                  <name>not_underflow</name>
                  <description>No FIFO buffer underflow</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>underflow</name>
                  <description>Has FIFO buffer underflow</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>receive_overflow</name>
              <description>Receive FIFO overflow flag\n\n
Can be cleared using `receive_clear`.</description>
              <lsb>6</lsb>
              <msb>6</msb>
              <access>read-only</access>
              <enumeratedValues>
                <name>HasOverflow</name>
                <enumeratedValue>
                  <name>not_overflow</name>
                  <description>No FIFO buffer overflow</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>overflow</name>
                  <description>Has FIFO buffer overflow</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>transmit_underflow</name>
              <description>Transmit FIFO underflow flag\n\n
Can be cleared using `transmit_clear`.</description>
              <lsb>5</lsb>
              <msb>5</msb>
              <access>read-only</access>
              <enumeratedValues derivedFrom="HasUnderflow" />
            </field>
            <field>
              <name>transmit_overflow</name>
              <description>Transmit FIFO overflow flag\n\n
Can be cleared using `transmit_clear`.</description>
              <lsb>4</lsb>
              <msb>4</msb>
              <access>read-only</access>
              <enumeratedValues derivedFrom="HasOverflow" />
            </field>
            <field>
              <name>receive_clear</name>
              <description>Clears receive FIFO overflow and underflow flags</description>
              <lsb>3</lsb>
              <msb>3</msb>
              <access>write-only</access>
              <enumeratedValues>
                <name>FlagClear</name>
                <enumeratedValue>
                  <name>clear</name>
                  <description>Write 1 to clear fifo flags</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>transmit_clear</name>
              <description>Clears transmit FIFO overflow and underflow flags</description>
              <lsb>2</lsb>
              <msb>2</msb>
              <access>write-only</access>
              <enumeratedValues derivedFrom="FlagClear" />
            </field>
            <field>
              <name>receive_dma</name>
              <description>Enable signal of receive DMA interface</description>
              <lsb>1</lsb>
              <msb>1</msb>
              <enumeratedValues>
                <name>DmaEnable</name>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Enable DMA interface</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Disable DMA interface</description>
                  <value>0x0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>transmit_dma</name>
              <description>Enable signal of transmit DMA interface</description>
              <lsb>0</lsb>
              <msb>0</msb>
              <enumeratedValues derivedFrom="DmaEnable" />
            </field>
          </fields>
        </register>
        <register>
          <name>fifo_config_1</name>
          <description>FIFO configuration register 1</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x00000020</resetValue>
          <resetMask>0xffffffff</resetMask>
          <fields>
            <field>
              <name>receive_threshold</name>
              <description>Receive FIFO threshold\n\n
DMA request will not be asserted if `receive_available` is less than this value</description>
              <lsb>24</lsb>
              <msb>28</msb>
            </field>
            <field>
              <name>transmit_threshold</name>
              <description>Transmit FIFO threshold\n\n
DMA request will not be asserted if `transmit_available` is less than this value</description>
              <lsb>16</lsb>
              <msb>20</msb>
            </field>
            <field>
              <name>receive_count</name>
              <description>Count of available data in receive FIFO</description>
              <lsb>8</lsb>
              <msb>13</msb>
              <access>read-only</access>
            </field>
            <field>
              <name>transmit_count</name>
              <description>Count of available data in transmit FIFO</description>
              <lsb>0</lsb>
              <msb>5</msb>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>data_write</name>
          <description>FIFO write data register</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xffffffff</resetMask>
          <access>write-only</access>
          <fields>
            <field>
              <name>value</name>
              <description>Write data to FIFO</description>
              <lsb>0</lsb>
              <msb>7</msb>
            </field>
          </fields>
        </register>
        <register>
          <name>data_read</name>
          <description>FIFO read data register</description>
          <addressOffset>0x8C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xffffffff</resetMask>
          <access>read-only</access>
          <fields>
            <field>
              <name>value</name>
              <description>Read data from FIFO</description>
              <lsb>0</lsb>
              <msb>7</msb>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <dim>1</dim>
      <dimIncrement>0x100</dimIncrement>
      <name>SPI[%s]</name>
      <description>Serial Peripheral Interface</description>
      <baseAddress>0x2000A200</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x100</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>config</name>
          <description>Function configuration register</description>
          <addressOffset>0x00</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>interrupt_state</name>
          <description>Interrupt enables, masks and states</description>
          <addressOffset>0x04</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>bus_busy</name>
          <description>Bus busy state indicator</description>
          <addressOffset>0x08</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>period_control</name>
          <description>Duration of control signals</description>
          <addressOffset>0x10</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>period_interval</name>
          <description>Interval bitween frames</description>
          <addressOffset>0x14</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>ignore_index</name>
          <description>Receive ignore index configuration</description>
          <addressOffset>0x18</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>timeout</name>
          <description>Slave mode transmit timeout values</description>
          <addressOffset>0x1c</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>fifo_config_0</name>
          <description>FIFO configuration register 0</description>
          <addressOffset>0x80</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>fifo_config_1</name>
          <description>FIFO configuration register 1</description>
          <addressOffset>0x84</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>data_write</name>
          <description>FIFO write data register</description>
          <addressOffset>0x88</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>data_read</name>
          <description>FIFO read data register</description>
          <addressOffset>0x8C</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <dim>2</dim>
      <dimIncrement>0x600</dimIncrement>
      <name>I2C[%s]</name>
      <description>Inter-Integrated Circuit bus</description>
      <baseAddress>0x2000A300</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x100</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>config</name>
          <description>Function configuration register</description>
          <addressOffset>0x00</addressOffset>
          <resetValue>0x0000000a</resetValue>
          <resetMask>0xffffffff</resetMask>
          <fields>
            <field>
              <name>deglitch_cycle</name>
              <description>De-glitch function cycle count</description>
              <lsb>28</lsb>
              <msb>31</msb>
            </field>
            <field>
              <name>packet_length</name>
              <description>Byte count for each packet</description>
              <lsb>16</lsb>
              <msb>23</msb>
            </field>
            <field>
              <name>slave_address</name>
              <description>I2C transaction slave address</description>
              <lsb>8</lsb>
              <msb>14</msb>
            </field>
            <field>
              <name>sub_address_length</name>
              <description>Byte count for I2C sub-address</description>
              <lsb>5</lsb>
              <msb>6</msb>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues>
                <enumeratedValue>
                  <name>one</name>
                  <description>Sub-addresses include 1 byte</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>two</name>
                  <description>Sub-addresses include 2 bytes</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>three</name>
                  <description>Sub-addresses include 3 bytes</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>four</name>
                  <description>Sub-addresses include 4 bytes</description>
                  <value>3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>sub_address_enable</name>
              <description>Enable sub-address fields</description>
              <lsb>4</lsb>
              <msb>4</msb>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Enable sub-address fields</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Disable sub-address fields</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>clock_synchronize</name>
              <description>Enable I2C clock synchronization\n\n
Enable this bit to support multi-master and clock-stretching. It should not be turned-off normally.</description>
              <lsb>3</lsb>
              <msb>3</msb>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Enable clock synchronization</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Disable clock synchronization</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>deglitch_enable</name>
              <description>Enable de-glitch function on all input pins</description>
              <lsb>2</lsb>
              <msb>2</msb>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Enable de-glitch function on inputs</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Disable de-glitch function on inputs</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>transfer_direction</name>
              <description>Packet transfer direction</description>
              <lsb>1</lsb>
              <msb>1</msb>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues>
                <enumeratedValue>
                  <name>write</name>
                  <description>Write from master side</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>read</name>
                  <description>Read from master side</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>master_enable</name>
              <description>Enable signal of I2C master function\n\n
Asserting this bit will trigger the transaction, and should be de-asserted after finish.</description>
              <lsb>0</lsb>
              <msb>0</msb>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Enable I2C master function</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Disable I2C master function</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>interrupt</name>
          <description>Interrupt enables, states and masks</description>
          <addressOffset>0x04</addressOffset>
          <resetValue>0x3f003f00</resetValue>
          <resetMask>0xffffffff</resetMask>
          <writeConstraint>
            <useEnumeratedValues>true</useEnumeratedValues>
          </writeConstraint>
          <fields>
            <field>
              <name>fifo_error_enable</name>
              <description>Transmit or receive FIFO error interrupt enable</description>
              <lsb>29</lsb>
              <msb>29</msb>
              <enumeratedValues>
                <name>InterruptEnable</name>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Enable interrupt</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Disable interrupt</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>arbitrate_lost_enable</name>
              <description>Arbitration lost interrupt enable</description>
              <lsb>28</lsb>
              <msb>28</msb>
              <enumeratedValues derivedFrom="InterruptEnable" />
            </field>
            <field>
              <name>not_acknowledged_enable</name>
              <description>Not-acknowledged response interrupt enable</description>
              <lsb>27</lsb>
              <msb>27</msb>
              <enumeratedValues derivedFrom="InterruptEnable" />
            </field>
            <field>
              <name>receive_fifo_ready_enable</name>
              <description>Receive FIFO ready interrupt enable</description>
              <lsb>26</lsb>
              <msb>26</msb>
              <enumeratedValues derivedFrom="InterruptEnable" />
            </field>
            <field>
              <name>transmit_fifo_ready_enable</name>
              <description>Transmit FIFO ready interrupt enable</description>
              <lsb>25</lsb>
              <msb>25</msb>
              <enumeratedValues derivedFrom="InterruptEnable" />
            </field>
            <field>
              <name>transfer_end_enable</name>
              <description>Transfer ended interrupt enable</description>
              <lsb>24</lsb>
              <msb>24</msb>
              <enumeratedValues derivedFrom="InterruptEnable" />
            </field>
            <field>
              <name>arbitrate_lost_clear</name>
              <description>Write 1 to clear arbitration lost</description>
              <lsb>20</lsb>
              <msb>20</msb>
              <access>write-only</access>
              <enumeratedValues>
                <name>InterruptClear</name>
                <enumeratedValue>
                  <name>clear</name>
                  <description>Write 1 to clear interrupt state</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>not_acknowledged_clear</name>
              <description>Write 1 to clear not-acknowledged response</description>
              <lsb>19</lsb>
              <msb>19</msb>
              <access>write-only</access>
              <enumeratedValues derivedFrom="InterruptClear" />
            </field>
            <field>
              <name>transfer_end_clear</name>
              <description>Write 1 to clear transfer ended</description>
              <lsb>16</lsb>
              <msb>16</msb>
              <access>write-only</access>
              <enumeratedValues derivedFrom="InterruptClear" />
            </field>
            <field>
              <name>fifo_error_mask</name>
              <description>Transmit or receive FIFO error interrupt mask</description>
              <lsb>13</lsb>
              <msb>13</msb>
              <enumeratedValues>
                <name>InterruptMask</name>
                <enumeratedValue>
                  <name>mask</name>
                  <description>Mask interrupt</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unmask</name>
                  <description>Unmask interrupt</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>arbitrate_lost_mask</name>
              <description>Arbitration lost interrupt mask</description>
              <lsb>12</lsb>
              <msb>12</msb>
              <enumeratedValues derivedFrom="InterruptMask" />
            </field>
            <field>
              <name>not_acknowledged_mask</name>
              <description>Not-acknowledged response interrupt mask</description>
              <lsb>11</lsb>
              <msb>11</msb>
              <enumeratedValues derivedFrom="InterruptMask" />
            </field>
            <field>
              <name>receive_fifo_ready_mask</name>
              <description>Receive FIFO ready interrupt mask</description>
              <lsb>10</lsb>
              <msb>10</msb>
              <enumeratedValues derivedFrom="InterruptMask" />
            </field>
            <field>
              <name>transmit_fifo_ready_mask</name>
              <description>Transmit FIFO ready interrupt mask</description>
              <lsb>9</lsb>
              <msb>9</msb>
              <enumeratedValues derivedFrom="InterruptMask" />
            </field>
            <field>
              <name>transfer_end_mask</name>
              <description>Transfer ended interrupt mask</description>
              <lsb>8</lsb>
              <msb>8</msb>
              <enumeratedValues derivedFrom="InterruptMask" />
            </field>
            <field>
              <name>fifo_error_state</name>
              <description>Transmit or receive FIFO error interrupt state\n\n
Auto cleared when FIFO overflow or underflow error flag is cleared.</description>
              <lsb>5</lsb>
              <msb>5</msb>
              <access>read-only</access>
              <enumeratedValues>
                <name>InterruptState</name>
                <enumeratedValue>
                  <name>has_interrupt</name>
                  <description>Has interrupt</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_interrupt</name>
                  <description>No interrupt occurred</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>arbitrate_lost_state</name>
              <description>Arbitration lost interrupt state</description>
              <lsb>4</lsb>
              <msb>4</msb>
              <access>read-only</access>
              <enumeratedValues derivedFrom="InterruptState" />
            </field>
            <field>
              <name>not_acknowledged_state</name>
              <description>Not-acknowledged response interrupt state</description>
              <lsb>3</lsb>
              <msb>3</msb>
              <access>read-only</access>
              <enumeratedValues derivedFrom="InterruptState" />
            </field>
            <field>
              <name>receive_fifo_ready_state</name>
              <description>Receive FIFO ready interrupt state\n\n
Auto cleared when data is popped from receive FIFO.</description>
              <lsb>2</lsb>
              <msb>2</msb>
              <access>read-only</access>
              <enumeratedValues derivedFrom="InterruptState" />
            </field>
            <field>
              <name>transmit_fifo_ready_state</name>
              <description>Transmit FIFO ready interrupt state\n\n
Auto cleared when data is pushed into transmit FIFO.</description>
              <lsb>1</lsb>
              <msb>1</msb>
              <access>read-only</access>
              <enumeratedValues derivedFrom="InterruptState" />
            </field>
            <field>
              <name>transfer_end_state</name>
              <description>Transfer ended interrupt state</description>
              <lsb>0</lsb>
              <msb>0</msb>
              <access>read-only</access>
              <enumeratedValues derivedFrom="InterruptState" />
            </field>
          </fields>
        </register>
        <register>
          <name>sub_address</name>
          <description>Register address of slave device</description>
          <addressOffset>0x08</addressOffset>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xffffffff</resetMask>
          <fields>
            <field>
              <dim>4</dim>
              <dimIncrement>8</dimIncrement>
              <name>byte[%s]</name>
              <description>I2C sub-address byte %s</description>
              <lsb>0</lsb>
              <msb>7</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>bus_busy</name>
          <description>Bus busy state indicator</description>
          <addressOffset>0x0C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xffffffff</resetMask>
          <writeConstraint>
            <useEnumeratedValues>true</useEnumeratedValues>
          </writeConstraint>
          <fields>
            <field>
              <name>force_clear</name>
              <description>Force clear I2C bus busy state\n\n
Not for normal use; only use when I2C bus hangs</description>
              <lsb>1</lsb>
              <msb>1</msb>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>clear</name>
                  <description>Write 1 to force clear busy flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>busy</name>
              <description>Indicator to I2C bus busy signal</description>
              <lsb>0</lsb>
              <msb>0</msb>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>busy</name>
                  <description>Bus is busy</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>idle</name>
                  <description>Bus is not busy</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>period_start</name>
          <description>Duration of start phase</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0f0f0f0f</resetValue>
          <resetMask>0xffffffff</resetMask>
          <fields>
            <field>
              <dim>4</dim>
              <dimIncrement>8</dimIncrement>
              <name>phase[%s]</name>
              <description>Length of start condition phase %s</description>
              <lsb>0</lsb>
              <msb>7</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>period_stop</name>
          <description>Duration of stop phase</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0f0f0f0f</resetValue>
          <resetMask>0xffffffff</resetMask>
          <fields>
            <field>
              <dim>4</dim>
              <dimIncrement>8</dimIncrement>
              <name>phase[%s]</name>
              <description>Length of stop condition phase %s</description>
              <lsb>0</lsb>
              <msb>7</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>period_data</name>
          <description>Duration of data phase</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0f0f0f0f</resetValue>
          <resetMask>0xffffffff</resetMask>
          <fields>
            <field>
              <dim>4</dim>
              <dimIncrement>8</dimIncrement>
              <name>phase[%s]</name>
              <description>Length of data condition phase %s</description>
              <lsb>0</lsb>
              <msb>7</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>fifo_config_0</name>
          <description>FIFO configuration register 0</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xffffffff</resetMask>
          <writeConstraint>
            <useEnumeratedValues>true</useEnumeratedValues>
          </writeConstraint>
          <fields>
            <field>
              <name>receive_underflow</name>
              <description>Receive FIFO underflow flag\n\n
Can be cleared using `receive_clear`.</description>
              <lsb>7</lsb>
              <msb>7</msb>
              <access>read-only</access>
              <enumeratedValues>
                <name>HasUnderflow</name>
                <enumeratedValue>
                  <name>not_underflow</name>
                  <description>No FIFO buffer underflow</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>underflow</name>
                  <description>Has FIFO buffer underflow</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>receive_overflow</name>
              <description>Receive FIFO overflow flag\n\n
Can be cleared using `receive_clear`.</description>
              <lsb>6</lsb>
              <msb>6</msb>
              <access>read-only</access>
              <enumeratedValues>
                <name>HasOverflow</name>
                <enumeratedValue>
                  <name>not_overflow</name>
                  <description>No FIFO buffer overflow</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>overflow</name>
                  <description>Has FIFO buffer overflow</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>transmit_underflow</name>
              <description>Transmit FIFO underflow flag\n\n
Can be cleared using `transmit_clear`.</description>
              <lsb>5</lsb>
              <msb>5</msb>
              <access>read-only</access>
              <enumeratedValues derivedFrom="HasUnderflow" />
            </field>
            <field>
              <name>transmit_overflow</name>
              <description>Transmit FIFO overflow flag\n\n
Can be cleared using `transmit_clear`.</description>
              <lsb>4</lsb>
              <msb>4</msb>
              <access>read-only</access>
              <enumeratedValues derivedFrom="HasOverflow" />
            </field>
            <field>
              <name>receive_clear</name>
              <description>Clears receive FIFO overflow and underflow flags</description>
              <lsb>3</lsb>
              <msb>3</msb>
              <access>write-only</access>
              <enumeratedValues>
                <name>FlagClear</name>
                <enumeratedValue>
                  <name>clear</name>
                  <description>Write 1 to clear fifo flags</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>transmit_clear</name>
              <description>Clears transmit FIFO overflow and underflow flags</description>
              <lsb>2</lsb>
              <msb>2</msb>
              <access>write-only</access>
              <enumeratedValues derivedFrom="FlagClear" />
            </field>
            <field>
              <name>receive_dma</name>
              <description>Enable signal of receive DMA interface</description>
              <lsb>1</lsb>
              <msb>1</msb>
              <enumeratedValues>
                <name>DmaEnable</name>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Enable DMA interface</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Disable DMA interface</description>
                  <value>0x0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>transmit_dma</name>
              <description>Enable signal of transmit DMA interface</description>
              <lsb>0</lsb>
              <msb>0</msb>
              <enumeratedValues derivedFrom="DmaEnable" />
            </field>
          </fields>
        </register>
        <register>
          <name>fifo_config_1</name>
          <description>FIFO configuration register 1</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x00000002</resetValue>
          <resetMask>0xffffffff</resetMask>
          <fields>
            <field>
              <name>receive_threshold</name>
              <description>Receive FIFO threshold\n\n
DMA request will not be asserted if `receive_available` is less than this value</description>
              <lsb>24</lsb>
              <msb>24</msb>
            </field>
            <field>
              <name>transmit_threshold</name>
              <description>Transmit FIFO threshold\n\n
DMA request will not be asserted if `transmit_available` is less than this value</description>
              <lsb>16</lsb>
              <msb>16</msb>
            </field>
            <field>
              <name>receive_count</name>
              <description>Count of available data in receive FIFO</description>
              <lsb>8</lsb>
              <msb>9</msb>
              <access>read-only</access>
            </field>
            <field>
              <name>transmit_count</name>
              <description>Count of available data in transmit FIFO</description>
              <lsb>0</lsb>
              <msb>1</msb>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>data_write</name>
          <description>FIFO write data register</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xffffffff</resetMask>
          <access>write-only</access>
          <fields>
            <field>
              <name>value</name>
              <description>Write data to FIFO</description>
              <lsb>0</lsb>
              <msb>7</msb>
            </field>
          </fields>
        </register>
        <register>
          <name>data_read</name>
          <description>FIFO read data register</description>
          <addressOffset>0x8C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xffffffff</resetMask>
          <access>read-only</access>
          <fields>
            <field>
              <name>value</name>
              <description>Read data from FIFO</description>
              <lsb>0</lsb>
              <msb>7</msb>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>PWM</name>
      <description>Pulse-Width Modulation module</description>
      <baseAddress>0x2000A400</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x100</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>interrupt_config</name>
          <description>Interrupt state and clear register</description>
          <addressOffset>0x00</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <cluster>
          <dim>2</dim>
          <dimIncrement>0x40</dimIncrement>
          <name>group[%s]</name>
          <description>Pulse-Width Modulation channel group</description>
          <addressOffset>0x40</addressOffset>
          <register>
            <name>config</name>
            <description>Peripheral group configuration</description>
            <addressOffset>0x00</addressOffset>
            <fields>
              <field>
                <name>clock_select</name>
                <description>Select group clock source</description>
                <lsb>30</lsb>
                <msb>31</msb>
                <writeConstraint>
                  <useEnumeratedValues>true</useEnumeratedValues>
                </writeConstraint>
                <enumeratedValues>
                  <name>ClockSource</name>
                  <enumeratedValue>
                    <name>xtal</name>
                    <description>External crystal as clock source</description>
                    <value>0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>bclk</name>
                    <description>Bus clock as clock source</description>
                    <value>1</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>f32k</name>
                    <description>32-kHz clock source</description>
                    <value>2</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>stop_state</name>
                <description>Is this peripheral stopped?</description>
                <lsb>29</lsb>
                <msb>29</msb>
              </field>
              <field>
                <name>stop_mode</name>
                <description>Mode to stop this peripheral</description>
                <lsb>28</lsb>
                <msb>28</msb>
              </field>
              <field>
                <name>stop_function</name>
                <description>Enable or disable stop function</description>
                <lsb>27</lsb>
                <msb>27</msb>
              </field>
              <field>
                <name>external_polarity</name>
                <description>Polarity for external pin break function</description>
                <lsb>26</lsb>
                <msb>26</msb>
              </field> 
              <field>
                <name>external_break</name>
                <description>Enable external pin signal break</description>
                <lsb>25</lsb>
                <msb>25</msb>
              </field>
              <field>
                <name>software_break</name>
                <description>Enable software signal break</description>
                <lsb>24</lsb>
                <msb>24</msb>
              </field> 
              <field>
                <name>adc_trigger_source</name>
                <description>Select channel in Analog-to-Digital Converter to interact with this peripheral\n\n
**This field only works with PWM0.** PWM1 does not have this feature.</description>
                <lsb>20</lsb>
                <msb>23</msb>
              </field>
              <field>
                <name>stop_on_repeat</name>
                <description>Enable or disable stop on one repeat cycle completed</description>
                <lsb>19</lsb>
                <msb>19</msb>
              </field>
            </fields>
          </register>
          <register>
            <name>channel</name>
            <description>Channel configuration register</description>
            <addressOffset>0x04</addressOffset>
            <fields>
              <field>
                <dim>4</dim>
                <dimIncrement>4</dimIncrement>
                <name>positive_signal[%s]</name>
                <description>Enable or disable positive signal for channel</description>
                <lsb>0</lsb>
                <msb>0</msb>
              </field>
              <field>
                <dim>4</dim>
                <dimIncrement>4</dimIncrement>
                <name>positive_idle[%s]</name>
                <description>Idle state of positive signal</description>
                <lsb>1</lsb>
                <msb>1</msb>
              </field>
              <field>
                <dim>4</dim>
                <dimIncrement>4</dimIncrement>
                <name>negative_signal[%s]</name>
                <description>Enable or disable negative signal for channel</description>
                <lsb>2</lsb>
                <msb>2</msb>
              </field>
              <field>
                <dim>4</dim>
                <dimIncrement>4</dimIncrement>
                <name>negative_idle[%s]</name>
                <description>Idle state of negative signal</description>
                <lsb>3</lsb>
                <msb>3</msb>
              </field>
              <field>
                <dim>4</dim>
                <dimIncrement>2</dimIncrement>
                <name>positive_polarity[%s]</name>
                <description>Polarity of positive signal</description>
                <lsb>16</lsb>
                <msb>16</msb>
              </field>
              <field>
                <dim>4</dim>
                <dimIncrement>2</dimIncrement>
                <name>negative_polarity[%s]</name>
                <description>Polarity of negative signal</description>
                <lsb>17</lsb>
                <msb>17</msb>
              </field>
              <field>
                <dim>4</dim>
                <dimIncrement>2</dimIncrement>
                <name>positive_break[%s]</name>
                <description>Break state on positive signal of this channel</description>
                <lsb>24</lsb>
                <msb>24</msb>
              </field>
              <field>
                <dim>4</dim>
                <dimIncrement>2</dimIncrement>
                <name>negative_break[%s]</name>
                <description>Break state on negative signal of this channel</description>
                <lsb>25</lsb>
                <msb>25</msb>
              </field>
            </fields>
          </register>
          <register>
            <name>period</name>
            <description>Pulse clock period register</description>
            <addressOffset>0x08</addressOffset>
            <fields>
              <field>
                <name>interrupt_cycles</name>
                <description>If internal counter reaches this cycle count, it interrupts</description>
                <lsb>0</lsb>
                <msb>15</msb>
              </field>
              <field>
                <name>repeat_cycles</name>
                <description>How many clock cycles a Pulse-Width Modulation cycle includes</description>
                <lsb>16</lsb>
                <msb>31</msb>
              </field>
            </fields>
          </register>
          <register>
            <name>dead_time</name>
            <description>Dead time for each channel</description>
            <addressOffset>0x0C</addressOffset>
            <fields>
              <field>
                <dim>4</dim>
                <dimIncrement>8</dimIncrement>
                <name>channel[%s]</name>
                <description>Dead time for each channel in cycles</description>
                <lsb>0</lsb>
                <msb>7</msb>
              </field>
            </fields>
          </register>
          <register>
            <dim>4</dim>
            <dimIncrement>0x04</dimIncrement>
            <name>threshold[%s]</name>
            <description>Channel internal counter threshold</description>
            <addressOffset>0x10</addressOffset>
            <fields>
              <field>
                <name>high</name>
                <description>Highest value for internal counter that sets positive signal to 1 and negative to 0</description>
                <lsb>16</lsb>
                <msb>31</msb>
              </field>
              <field>
                <name>low</name>
                <description>Lowest value for internal counter that sets positive signal to 1 and negative to 0</description>
                <lsb>0</lsb>
                <msb>15</msb>
              </field>
            </fields>
          </register>
          <register>
            <name>interrupt_state</name>
            <description>Interrupt state register</description>
            <addressOffset>0x20</addressOffset>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xffffffff</resetMask>
            <access>read-only</access>
            <writeConstraint>
              <useEnumeratedValues>true</useEnumeratedValues>
            </writeConstraint>
            <fields>
              <field>
                <dim>4</dim>
                <dimIncrement>2</dimIncrement>
                <name>threshold_low[%s]</name>
                <description>Intenal counter for channel have exceeded low threshold</description>
                <lsb>0</lsb>
                <msb>0</msb>
                <enumeratedValues>
                  <name>InterruptState</name>
                  <enumeratedValue>
                    <name>has_interrupt</name>
                    <description>Has interrupt</description>
                    <value>1</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>no_interrupt</name>
                    <description>No interrupt occurred</description>
                    <value>0</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <dim>4</dim>
                <dimIncrement>2</dimIncrement>
                <name>threshold_high[%s]</name>
                <description>Intenal counter for channel have exceeded high threshold</description>
                <lsb>1</lsb>
                <msb>1</msb>
                <enumeratedValues derivedFrom="threshold_low[%s].InterruptState" />
              </field>
              <field>
                <name>interrupt_period</name>
                <description>Intenal counter for channel have exceeded interrupt cycle threshold</description>
                <lsb>8</lsb>
                <msb>8</msb>
                <enumeratedValues derivedFrom="threshold_low[%s].InterruptState" />
              </field>
              <field>
                <name>external_break</name>
                <description>External break signal occurred</description>
                <lsb>9</lsb>
                <msb>9</msb>
                <enumeratedValues derivedFrom="threshold_low[%s].InterruptState" />
              </field>
              <field>
                <name>repeat</name>
                <description>Peripheral group have completed one repeat cycle</description>
                <lsb>10</lsb>
                <msb>10</msb>
                <enumeratedValues derivedFrom="threshold_low[%s].InterruptState" />
              </field>
            </fields>
          </register>
          <register>
            <name>interrupt_mask</name>
            <description>Interrupt mask register</description>
            <addressOffset>0x24</addressOffset>
            <resetValue>0x0000007f</resetValue>
            <resetMask>0xffffffff</resetMask>
            <writeConstraint>
              <useEnumeratedValues>true</useEnumeratedValues>
            </writeConstraint>
            <fields>
              <field>
                <dim>4</dim>
                <dimIncrement>2</dimIncrement>
                <name>threshold_low[%s]</name>
                <description>Intenal counter for channel have exceeded low threshold</description>
                <lsb>0</lsb>
                <msb>0</msb>
                <enumeratedValues>
                  <name>InterruptMask</name>
                  <enumeratedValue>
                    <name>mask</name>
                    <description>Mask interrupt</description>
                    <value>1</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>unmask</name>
                    <description>Unmask interrupt</description>
                    <value>0</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <dim>4</dim>
                <dimIncrement>2</dimIncrement>
                <name>threshold_high[%s]</name>
                <description>Intenal counter for channel have exceeded high threshold</description>
                <lsb>1</lsb>
                <msb>1</msb>
                <enumeratedValues derivedFrom="threshold_low[%s].InterruptMask" />
              </field>
              <field>
                <name>interrupt_period</name>
                <description>Intenal counter for channel have exceeded interrupt cycle threshold</description>
                <lsb>8</lsb>
                <msb>8</msb>
                <enumeratedValues derivedFrom="threshold_low[%s].InterruptMask" />
              </field>
              <field>
                <name>external_break</name>
                <description>External break signal occurred</description>
                <lsb>9</lsb>
                <msb>9</msb>
                <enumeratedValues derivedFrom="threshold_low[%s].InterruptMask" />
              </field>
              <field>
                <name>repeat</name>
                <description>Peripheral group have completed one repeat cycle</description>
                <lsb>10</lsb>
                <msb>10</msb>
                <enumeratedValues derivedFrom="threshold_low[%s].InterruptMask" />
              </field>
            </fields>
          </register>
          <register>
            <name>interrupt_clear</name>
            <description>Clear interrupt register</description>
            <addressOffset>0x28</addressOffset>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xffffffff</resetMask>
            <access>write-only</access>
            <writeConstraint>
              <useEnumeratedValues>true</useEnumeratedValues>
            </writeConstraint>
            <fields>
              <field>
                <dim>4</dim>
                <dimIncrement>2</dimIncrement>
                <name>threshold_low[%s]</name>
                <description>Intenal counter for channel have exceeded low threshold</description>
                <lsb>0</lsb>
                <msb>0</msb>
                <enumeratedValues>
                  <name>InterruptClear</name>
                  <enumeratedValue>
                    <name>clear</name>
                    <description>Write 1 to clear interrupt state</description>
                    <value>0x1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <dim>4</dim>
                <dimIncrement>2</dimIncrement>
                <name>threshold_high[%s]</name>
                <description>Intenal counter for channel have exceeded high threshold</description>
                <lsb>1</lsb>
                <msb>1</msb>
                <enumeratedValues derivedFrom="threshold_low[%s].InterruptClear" />
              </field>
              <field>
                <name>interrupt_period</name>
                <description>Intenal counter for channel have exceeded interrupt cycle threshold</description>
                <lsb>8</lsb>
                <msb>8</msb>
                <enumeratedValues derivedFrom="threshold_low[%s].InterruptClear" />
              </field>
              <field>
                <name>external_break</name>
                <description>External break signal occurred</description>
                <lsb>9</lsb>
                <msb>9</msb>
                <enumeratedValues derivedFrom="threshold_low[%s].InterruptClear" />
              </field>
              <field>
                <name>repeat</name>
                <description>Peripheral group have completed one repeat cycle</description>
                <lsb>10</lsb>
                <msb>10</msb>
                <enumeratedValues derivedFrom="threshold_low[%s].InterruptClear" />
              </field>
            </fields>
          </register>
          <register>
            <name>interrupt_enable</name>
            <description>Interrupt enable register</description>
            <addressOffset>0x2C</addressOffset>
            <resetValue>0x0000007f</resetValue>
            <resetMask>0xffffffff</resetMask>
            <writeConstraint>
              <useEnumeratedValues>true</useEnumeratedValues>
            </writeConstraint>
            <fields>
              <field>
                <dim>4</dim>
                <dimIncrement>2</dimIncrement>
                <name>threshold_low[%s]</name>
                <description>Intenal counter for channel have exceeded low threshold</description>
                <lsb>0</lsb>
                <msb>0</msb>
                <enumeratedValues>
                  <name>InterruptEnable</name>
                  <enumeratedValue>
                    <name>enable</name>
                    <description>Enable interrupt</description>
                    <value>1</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>disable</name>
                    <description>Disable interrupt</description>
                    <value>0</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <dim>4</dim>
                <dimIncrement>2</dimIncrement>
                <name>threshold_high[%s]</name>
                <description>Intenal counter for channel have exceeded high threshold</description>
                <lsb>1</lsb>
                <msb>1</msb>
                <enumeratedValues derivedFrom="threshold_low[%s].InterruptEnable" />
              </field>
              <field>
                <name>interrupt_period</name>
                <description>Intenal counter for channel have exceeded interrupt cycle threshold</description>
                <lsb>8</lsb>
                <msb>8</msb>
                <enumeratedValues derivedFrom="threshold_low[%s].InterruptEnable" />
              </field>
              <field>
                <name>external_break</name>
                <description>External break signal occurred</description>
                <lsb>9</lsb>
                <msb>9</msb>
                <enumeratedValues derivedFrom="threshold_low[%s].InterruptEnable" />
              </field>
              <field>
                <name>repeat</name>
                <description>Peripheral group have completed one repeat cycle</description>
                <lsb>10</lsb>
                <msb>10</msb>
                <enumeratedValues derivedFrom="threshold_low[%s].InterruptEnable" />
              </field>
            </fields>
          </register>
        </cluster>
      </registers>
    </peripheral>
    <peripheral>
      <name>TIMER</name>
      <description>Timer control</description>
      <baseAddress>0x2000A500</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>todo</name>
          <description>??</description>
          <addressOffset>0</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>IR</name>
      <description>Infrared receiver module</description>
      <baseAddress>0x2000A600</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x100</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>transmit_config</name>
          <description>??</description>
          <addressOffset>0x00</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>transmit_interrupt</name>
          <description>??</description>
          <addressOffset>0x04</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x04</dimIncrement>
          <name>transmit_data[%s]</name>
          <description>??</description>
          <addressOffset>0x08</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>transmit_width</name>
          <description>??</description>
          <addressOffset>0x10</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>receive_config</name>
          <description>??</description>
          <addressOffset>0x80</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>receive_interrupt</name>
          <description>??</description>
          <addressOffset>0x84</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>receive_width</name>
          <description>??</description>
          <addressOffset>0x88</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>receive_bit_count</name>
          <description>??</description>
          <addressOffset>0x90</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x04</dimIncrement>
          <name>receive_data[%s]</name>
          <description>??</description>
          <addressOffset>0x94</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>CRC</name>
      <description>Checksum peripheral</description>
      <baseAddress>0x2000A700</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x100</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>config</name>
          <description>Configuration register</description>
          <addressOffset>0x0</addressOffset>
          <fields>
            <field>
              <name>clear</name>
              <description>Write 1 to clear internal checksum states</description>
              <lsb>0</lsb>
              <msb>0</msb>
              <access>write-only</access>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues>
                <name>Clear</name>
                <enumeratedValue>
                  <name>clear</name>
                  <description>Write 1 to clear internal states</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>endian</name>
              <description>Sets endian of input data</description>
              <lsb>1</lsb>
              <msb>1</msb>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues>
                <name>Endian</name>
                <enumeratedValue>
                  <name>little</name>
                  <description>Little endian</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>big</name>
                  <description>Big endian</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>input</name>
          <description>Data input register</description>
          <addressOffset>0x4</addressOffset>
          <access>write-only</access>
          <fields>
            <field>
              <name>data</name>
              <description>Write data value into checksum calculator</description>
              <lsb>0</lsb>
              <msb>31</msb>
            </field>
          </fields>
        </register>
        <register>
          <name>output</name>
          <description>Checksum output register</description>
          <addressOffset>0x8</addressOffset>
          <access>read-only</access>
          <fields>
            <field>
              <name>checksum</name>
              <description>Read checksum from peripheral</description>
              <lsb>0</lsb>
              <msb>15</msb>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>DBI</name>
      <description>MIPI Display Bus Interface</description>
      <baseAddress>0x2000A800</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x100</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>todo</name>
          <description>??</description>
          <addressOffset>0</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>ISO11898</name>
      <description>ISO 11898 communication protocol</description>
      <baseAddress>0x2000AA00</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x100</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>todo</name>
          <description>??</description>
          <addressOffset>0</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>I2S</name>
      <description>Inter-IC Sound controller</description>
      <baseAddress>0x2000AB00</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x100</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>config</name>
          <description>Function configuration register</description>
          <addressOffset>0x00</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>interrupt_state</name>
          <description>Interrupt enables, masks and states</description>
          <addressOffset>0x04</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>base_clock</name>
          <description>Base clock divider</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x00010001</resetValue>
          <resetMask>0xffffffff</resetMask>
          <fields>
            <field>
              <name>divide_high</name>
              <description>Higher half of base clock dividing factor</description>
              <lsb>16</lsb>
              <msb>27</msb>
              <access>read-write</access>
            </field>
            <field>
              <name>divide_low</name>
              <description>Lower half of base clock dividing factor</description>
              <lsb>0</lsb>
              <msb>11</msb>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>fifo_config_0</name>
          <description>FIFO configuration register 0</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xffffffff</resetMask>
          <fields>
            <field>
              <name>left_justified</name> <!-- todo proper name -->
              <description></description>
              <lsb>10</lsb>
              <msb>10</msb>
              <!-- todo access, writeConstraint, values-->
            </field>
            <field>
              <name>swap_left_right</name>
              <description></description>
              <lsb>9</lsb>
              <msb>9</msb>
              <!-- todo access, writeConstraint, values-->
            </field>
            <field>
              <name>merge_left_right</name>
              <description></description>
              <lsb>8</lsb>
              <msb>8</msb>
              <!-- todo access, writeConstraint, values-->
            </field>
            <field>
              <name>receive_underflow</name>
              <description>Receive FIFO underflow flag\n\n
Can be cleared using `receive_clear`.</description>
              <lsb>7</lsb>
              <msb>7</msb>
              <access>read-only</access>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues>
                <name>HasUnderflow</name>
                <enumeratedValue>
                  <name>not_underflow</name>
                  <description>No FIFO buffer underflow</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>underflow</name>
                  <description>Has FIFO buffer underflow</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>receive_overflow</name>
              <description>Receive FIFO overflow flag\n\n
Can be cleared using `receive_clear`.</description>
              <lsb>6</lsb>
              <msb>6</msb>
              <access>read-only</access>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues>
                <name>HasOverflow</name>
                <enumeratedValue>
                  <name>not_overflow</name>
                  <description>No FIFO buffer overflow</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>overflow</name>
                  <description>Has FIFO buffer overflow</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>transmit_underflow</name>
              <description>Transmit FIFO underflow flag\n\n
Can be cleared using `transmit_clear`.</description>
              <lsb>5</lsb>
              <msb>5</msb>
              <access>read-only</access>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues derivedFrom="HasUnderflow" />
            </field>
            <field>
              <name>transmit_overflow</name>
              <description>Transmit FIFO overflow flag\n\n
Can be cleared using `transmit_clear`.</description>
              <lsb>4</lsb>
              <msb>4</msb>
              <access>read-only</access>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues derivedFrom="HasOverflow" />
            </field>
            <field>
              <name>receive_clear</name>
              <description>Clears receive FIFO overflow and underflow flags</description>
              <lsb>3</lsb>
              <msb>3</msb>
              <access>write-only</access>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues>
                <name>FlagClear</name>
                <enumeratedValue>
                  <name>clear</name>
                  <description>Write 1 to clear fifo flags</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>transmit_clear</name>
              <description>Clears transmit FIFO overflow and underflow flags</description>
              <lsb>2</lsb>
              <msb>2</msb>
              <access>write-only</access>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues derivedFrom="FlagClear" />
            </field>
            <field>
              <name>receive_dma</name>
              <description>Enable signal of receive DMA interface</description>
              <lsb>1</lsb>
              <msb>1</msb>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues>
                <name>DmaEnable</name>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Enable DMA interface</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Disable DMA interface</description>
                  <value>0x0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>transmit_dma</name>
              <description>Enable signal of transmit DMA interface</description>
              <lsb>0</lsb>
              <msb>0</msb>
              <writeConstraint>
                <useEnumeratedValues>true</useEnumeratedValues>
              </writeConstraint>
              <enumeratedValues derivedFrom="DmaEnable" />
            </field>
          </fields>
        </register>
        <register>
          <name>fifo_config_1</name>
          <description>FIFO configuration register 1</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x00000010</resetValue>
          <resetMask>0xffffffff</resetMask>
          <fields>
            <field>
              <name>receive_threshold</name>
              <description>Receive FIFO threshold\n\n
DMA request will not be asserted if `receive_available` is less than this value</description>
              <lsb>24</lsb>
              <msb>27</msb>
            </field>
            <field>
              <name>transmit_threshold</name>
              <description>Transmit FIFO threshold\n\n
DMA request will not be asserted if `transmit_available` is less than this value</description>
              <lsb>16</lsb>
              <msb>19</msb>
            </field>
            <field>
              <name>receive_count</name>
              <description>Count of available data in receive FIFO</description>
              <lsb>8</lsb>
              <msb>12</msb>
              <access>read-only</access>
            </field>
            <field>
              <name>transmit_count</name>
              <description>Count of available data in transmit FIFO</description>
              <lsb>0</lsb>
              <msb>4</msb>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>data_write</name>
          <description>FIFO write data register</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xffffffff</resetMask>
          <access>write-only</access>
          <fields>
            <field>
              <name>value</name>
              <description>Write data to FIFO</description>
              <lsb>0</lsb>
              <msb>7</msb>
            </field>
          </fields>
        </register>
        <register>
          <name>data_read</name>
          <description>FIFO read data register</description>
          <addressOffset>0x8C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xffffffff</resetMask>
          <access>read-only</access>
          <fields>
            <field>
              <name>value</name>
              <description>Read data from FIFO</description>
              <lsb>0</lsb>
              <msb>7</msb>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>AUADC</name>
      <description>Analog-to-Digital or Pulse-Density audio input</description>
      <baseAddress>0x2000AC00</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x100</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>clock</name>
          <description>Peripheral clock control register</description>
          <addressOffset>0x00</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>interface_0</name>
          <description>Interface control register 0</description>
          <addressOffset>0x04</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>finite_impulse</name>
          <description>Finite Impulse Response control</description>
          <addressOffset>0x08</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>high_pass</name>
          <description>High-Pass Filter control register</description>
          <addressOffset>0x0C</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>interface_1</name>
          <description>Interface control register 1</description>
          <addressOffset>0x10</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>pulse_width</name>
          <description>Pulse-Width Modulator control</description>
          <addressOffset>0x1C</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>volume</name>
          <description>Volume control register</description>
          <addressOffset>0x38</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>analog_0</name>
          <description>Analog signal configuration 0</description>
          <addressOffset>0x60</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>analog_1</name>
          <description>Analog signal configuration 1</description>
          <addressOffset>0x64</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>command</name>
          <description>Analog-to-Digital Converter commands</description>
          <addressOffset>0x68</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>sample_data</name>
          <description>Analog-to-Digital Converter sample output</description>
          <addressOffset>0x6C</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>fifo_control</name>
          <description>Controls audio input FIFO</description>
          <addressOffset>0x80</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>fifo_state</name>
          <description>Gets states of audio input FIFO</description>
          <addressOffset>0x84</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>fifo_data</name>
          <description>Reads data from audio input FIFO</description>
          <addressOffset>0x88</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>FLASH</name>
      <description>Quad Serial Flash control</description>
      <baseAddress>0x2000B000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x100</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>todo</name>
          <description>??</description>
          <addressOffset>0</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>DMA</name>
      <description>Direct Memory Access module</description>
      <baseAddress>0x2000C000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>interrupt_state</name>
          <description>??</description>
          <addressOffset>0x00</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>terminate_state</name>
          <description>??</description>
          <addressOffset>0x04</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>terminate_clear</name>
          <description>??</description>
          <addressOffset>0x08</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>error_state</name>
          <description>??</description>
          <addressOffset>0x0C</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>error_clear</name>
          <description>??</description>
          <addressOffset>0x10</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>terminate_state_raw</name>
          <description>??</description>
          <addressOffset>0x14</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>error_state_raw</name>
          <description>??</description>
          <addressOffset>0x18</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>channel_state</name>
          <description>??</description>
          <addressOffset>0x1C</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>burst_request</name>
          <description>??</description>
          <addressOffset>0x20</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>single_request</name>
          <description>??</description>
          <addressOffset>0x24</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>last_burst_request</name>
          <description>??</description>
          <addressOffset>0x28</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>last_single_request</name>
          <description>??</description>
          <addressOffset>0x2C</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>config</name>
          <description>??</description>
          <addressOffset>0x30</addressOffset>
          <fields>
            <!-- todo: fields -->
            <field>
              <name>function</name>
              <description>Enable or disable DMA peripheral</description>
              <lsb>0</lsb>
              <msb>0</msb>
            </field>
          </fields>
        </register>
        <register>
          <name>synchronize</name>
          <description>??</description>
          <addressOffset>0x34</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <cluster>
          <dim>4</dim>
          <dimIncrement>0x100</dimIncrement>
          <name>channel[%s]</name>
          <description>Direct Memory Access channel</description>
          <addressOffset>0x100</addressOffset>
          <register>
            <name>source</name>
            <description>Source address</description>
            <addressOffset>0x00</addressOffset>
            <fields>
              <!-- todo: fields -->
            </fields>
          </register>
          <register>
            <name>destination</name>
            <description>Destination address</description>
            <addressOffset>0x04</addressOffset>
            <fields>
              <!-- todo: fields -->
            </fields>
          </register>
          <register>
            <name>linked_list</name>
            <description>Linked list buffer base address</description>
            <addressOffset>0x08</addressOffset>
            <fields>
              <field>
                <name>base_address</name>
                <description>Base address of first linked list item, must be aligned to 4 bytes</description>
                <lsb>0</lsb>
                <msb>31</msb>
              </field>
            </fields>
          </register>
          <register>
            <name>control</name>
            <description>Control register</description>
            <addressOffset>0x0C</addressOffset>
            <fields>
              <!-- todo: fields -->
            </fields>
          </register>
          <register>
            <name>config</name>
            <description>Configuration register</description>
            <addressOffset>0x10</addressOffset>
            <fields>
              <field>
                <name>linked_list_counter</name>
                <description>??</description>
                <lsb>20</lsb>
                <msb>29</msb>
              </field>
              <field>
                <name>halt</name>
                <description>??</description>
                <lsb>17</lsb>
                <msb>17</msb>
              </field>
              <field>
                <name>active</name>
                <description>??</description>
                <access>read-only</access>
                <lsb>16</lsb>
                <msb>16</msb>
              </field>
              <field>
                <name>lock</name>
                <description>??</description>
                <lsb>16</lsb>
                <msb>16</msb>
              </field>
              <field>
                <name>terminate_mask</name>
                <description>Mask terminal count interrupt</description>
                <lsb>15</lsb>
                <msb>15</msb>
              </field>
              <field>
                <name>error_mask</name>
                <description>Mask error interrupt</description>
                <lsb>14</lsb>
                <msb>14</msb>
              </field>
              <field>
                <name>flow_control</name>
                <description>Set data direction for this channel</description>
                <lsb>11</lsb>
                <msb>13</msb>
              </field>
              <field>
                <name>destination_peripheral</name>
                <description>Set destination peripheral for this DMA channel</description>
                <lsb>6</lsb>
                <msb>10</msb>
                <!-- todo: enumeratedValues -->
              </field>
              <field>
                <name>source_peripheral</name>
                <description>Set source peripheral for this DMA channel</description>
                <lsb>1</lsb>
                <msb>5</msb>
              </field>
              <field>
                <name>function</name>
                <description>Enable or disable DMA channel</description>
                <lsb>0</lsb>
                <msb>0</msb>
              </field>
            </fields>
          </register>
        </cluster>
      </registers>
    </peripheral>
    <peripheral>
      <name>SDU</name>
      <description>Secure Digital User interface</description>
      <baseAddress>0x2000D000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x100</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>todo</name>
          <description>??</description>
          <addressOffset>0</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>PDS</name>
      <description>Power-Down Sleep control</description>
      <baseAddress>0x2000E000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>touch_config</name>
          <description>??</description>
          <addressOffset>0xA00</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>touch_channel</name>
          <description>??</description>
          <addressOffset>0xA04</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>touch_process</name>
          <description>??</description>
          <addressOffset>0xA08</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>touch_sleep</name>
          <description>??</description>
          <addressOffset>0xA0C</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>touch_delay</name>
          <description>??</description>
          <addressOffset>0xA10</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <dim>6</dim>
          <dimIncrement>0x04</dimIncrement>
          <name>touch_force[%s]</name>
          <description>??</description>
          <addressOffset>0xA14</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <dim>3</dim>
          <dimIncrement>0x04</dimIncrement>
          <name>touch_voltage[%s]</name>
          <description>??</description>
          <addressOffset>0xA2C</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <dim>12</dim>
          <dimIncrement>0x04</dimIncrement>
          <name>touch_raw[%s]</name>
          <description>??</description>
          <addressOffset>0xA38</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <!-- todo: Channel_LTA_data_0? -->
        <!-- todo: Channel_FLT_data_0? -->
        <register>
          <name>touch_interrupt_0</name>
          <description>??</description>
          <addressOffset>0xACC</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>touch_interrupt_1</name>
          <description>??</description>
          <addressOffset>0xAD0</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <!-- todo: registers -->
      </registers>
    </peripheral>
    <peripheral>
      <name>HBN</name>
      <description>Hibernate (Deep sleep) control</description>
      <baseAddress>0x2000F000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x800</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>control</name>
          <description>Miscellaneous control register</description>
          <addressOffset>0x00</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>time_lo</name>
          <description>Low bits of hibernate time</description>
          <addressOffset>0x04</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>time_hi</name>
          <description>High bits of hibernate time</description>
          <addressOffset>0x08</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>rtc_time_lo</name>
          <description>Low bits of Real-Time Clock time</description>
          <addressOffset>0x0C</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>rtc_time_hi</name>
          <description>High bits of Real-Time Clock time</description>
          <addressOffset>0x10</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>interrupt_mode</name>
          <description>Hibernate interrupt contol</description>
          <addressOffset>0x14</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>interrupt_state</name>
          <description>Hibernate interrupt state</description>
          <addressOffset>0x18</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>interrupt_clear</name>
          <description>Clear hibernate interrupt</description>
          <addressOffset>0x1C</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <!-- todo: HBN_PIR_CFG -->
        <!-- todo: HBN_PIR_VTH -->
        <!-- todo: HBN_PIR_INTERVAL -->
        <!-- todo: HBN_BOR_CFG -->
        <register>
          <name>global</name>
          <description>Global hibernate configuration</description>
          <addressOffset>0x30</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>sram</name>
          <description>Static Random-Access Memory hibernate control</description>
          <addressOffset>0x34</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <!-- todo: HBN_PAD_CTRL_0 -->
        <!-- todo: HBN_PAD_CTRL_1 -->
        <register>
          <name>rc32k</name>
          <description>32-kHz internal RC oscillator control</description>
          <addressOffset>0x200</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>xtal32k</name>
          <description>External crystal oscillator control</description>
          <addressOffset>0x204</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>rtc_control_0</name>
          <description>Real-Time Clock control and reset register 0</description>
          <addressOffset>0x208</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>rtc_control_1</name>
          <description>Real-Time Clock control and reset register 1</description>
          <addressOffset>0x20C</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
      </registers>
    </peripheral>
    <!-- todo: MM_MISC = 0x20050000 -->
    <peripheral>
      <name>PSRAM</name>
      <description>Pseudo Static Random Access Memory control</description>
      <baseAddress>0x20052000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x100</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>todo</name>
          <description>??</description>
          <addressOffset>0</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>AUDAC</name>
      <description>Pulse-Width or Digital-to-Analog audio output</description>
      <baseAddress>0x20055000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>clock</name>
          <description>Clock control register</description>
          <addressOffset>0x00</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>state</name>
          <description>Peripheral state register</description>
          <addressOffset>0x04</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>volume_0</name>
          <description>Volume control register 0</description>
          <addressOffset>0x08</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>volume_1</name>
          <description>Volume control register 1</description>
          <addressOffset>0x0C</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>zero_signal</name>
          <description>Zero signal detection</description>
          <addressOffset>0x10</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>config</name>
          <description>Delta-Sigma and mixer control</description>
          <addressOffset>0x14</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>fifo_control</name>
          <description>Controls audio output FIFO</description>
          <addressOffset>0x8C</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>fifo_state</name>
          <description>Gets states of audio output FIFO</description>
          <addressOffset>0x90</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>fifo_data</name>
          <description>Writes data into audio output FIFO</description>
          <addressOffset>0x94</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>EFUSE</name>
      <description>eFuse memory control</description>
      <baseAddress>0x20056000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>todo</name>
          <description>??</description>
          <addressOffset>0</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <dim>1</dim>
      <dimIncrement>0x1000</dimIncrement>
      <name>DVP[%s]</name>
      <description>Digital Video Port control</description>
      <baseAddress>0x20057000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>todo</name>
          <description>??</description>
          <addressOffset>0</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>MJPEG</name>
      <description>Motion JPEG encoder</description>
      <baseAddress>0x20059000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>todo</name>
          <description>??</description>
          <addressOffset>0</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SDH</name>
      <description>Secure Digital host control</description>
      <baseAddress>0x20060000</baseAddress>
      <!-- todo: sdk shows this peripheral is written by 16-bit register, confirm this -->
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>todo</name>
          <description>??</description>
          <addressOffset>0</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>EMAC</name>
      <description>Ethernet Media Access Control</description>
      <baseAddress>0x20070000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>mode</name>
          <description>Interface enables and configurations</description>
          <addressOffset>0x00</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>interrupt_source</name>
          <description>Interrupt source register</description>
          <addressOffset>0x04</addressOffset>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xffffffff</resetMask>
          <access>read-write</access>
          <!-- todo: don't generate write functions if defined like oneToClear -->
          <modifiedWriteValues>oneToClear</modifiedWriteValues>
          <fields>
            <field>
              <name>control_receive</name>
              <description>Control frame received interrupt state</description>
              <lsb>6</lsb>
              <msb>6</msb>
              <enumeratedValues>
                <name>InterruptState</name>
                <enumeratedValue>
                  <name>has_interrupt</name>
                  <description>Has interrupt</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_interrupt</name>
                  <description>No interrupt occurred</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>control_transmit</name>
              <description>Control frame transmitted interrupt state</description>
              <lsb>5</lsb>
              <msb>5</msb>
              <enumeratedValues derivedFrom="InterruptState" />
            </field>
            <field>
              <name>busy</name>
              <description>Lack of buffer interrupt state</description>
              <lsb>4</lsb>
              <msb>4</msb>
              <enumeratedValues derivedFrom="InterruptState" />
            </field>
            <field>
              <name>receive_error</name>
              <description>Receive error interrupt state</description>
              <lsb>3</lsb>
              <msb>3</msb>
              <enumeratedValues derivedFrom="InterruptState" />
            </field>
            <field>
              <name>frame_received</name>
              <description>Frame received interrupt state</description>
              <lsb>2</lsb>
              <msb>2</msb>
              <enumeratedValues derivedFrom="InterruptState" />
            </field>
            <field>
              <name>transmit_error</name>
              <description>Transmit error interrupt state</description>
              <lsb>1</lsb>
              <msb>1</msb>
              <enumeratedValues derivedFrom="InterruptState" />
            </field>
            <field>
              <name>buffer_transmitted</name>
              <description>Buffer transmitted interrupt state</description>
              <lsb>0</lsb>
              <msb>0</msb>
              <enumeratedValues derivedFrom="InterruptState" />
            </field>
          </fields>
        </register>
        <register>
          <name>interrupt_mask</name>
          <description>Interrupt mask register</description>
          <addressOffset>0x08</addressOffset>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xffffffff</resetMask>
          <access>read-write</access>
          <writeConstraint>
            <useEnumeratedValues>true</useEnumeratedValues>
          </writeConstraint>
          <fields>
            <field>
              <name>control_receive</name>
              <description>Control frame received interrupt mask</description>
              <lsb>6</lsb>
              <msb>6</msb>
              <enumeratedValues>
                <name>InterruptMask</name>
                <enumeratedValue>
                  <name>mask</name>
                  <description>Mask interrupt</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unmask</name>
                  <description>Unmask interrupt</description>
                  <value>0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>control_transmit</name>
              <description>Control frame transmitted interrupt mask</description>
              <lsb>5</lsb>
              <msb>5</msb>
              <enumeratedValues derivedFrom="InterruptMask" />
            </field>
            <field>
              <name>busy</name>
              <description>Lack of buffer interrupt mask</description>
              <lsb>4</lsb>
              <msb>4</msb>
              <enumeratedValues derivedFrom="InterruptMask" />
            </field>
            <field>
              <name>receive_error</name>
              <description>Receive error interrupt mask</description>
              <lsb>3</lsb>
              <msb>3</msb>
              <enumeratedValues derivedFrom="InterruptMask" />
            </field>
            <field>
              <name>frame_received</name>
              <description>Frame received interrupt mask</description>
              <lsb>2</lsb>
              <msb>2</msb>
              <enumeratedValues derivedFrom="InterruptMask" />
            </field>
            <field>
              <name>transmit_error</name>
              <description>Transmit error interrupt mask</description>
              <lsb>1</lsb>
              <msb>1</msb>
              <enumeratedValues derivedFrom="InterruptMask" />
            </field>
            <field>
              <name>buffer_transmitted</name>
              <description>Buffer transmitted interrupt mask</description>
              <lsb>0</lsb>
              <msb>0</msb>
              <enumeratedValues derivedFrom="InterruptMask" />
            </field>
          </fields>
        </register>
        <register>
          <name>backed_gap</name>
          <description>Back-to-back inter-packet gap register</description>
          <addressOffset>0x0C</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>non_backed_gap_1</name>
          <description>Non back-to-back inter-packet gap register 1</description>
          <addressOffset>0x10</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>non_backed_gap_2</name>
          <description>Non back-to-back inter-packet gap register 2</description>
          <addressOffset>0x14</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>frame_length</name>
          <description>Minimum and maximum ethernet frame length</description>
          <addressOffset>0x18</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>collision</name>
          <description>Collision time window and maximum retries</description>
          <addressOffset>0x1C</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>transmit_buffer</name>
          <description>Transmit buffer descriptor</description>
          <addressOffset>0x20</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>flow_control</name>
          <description>Control frame function register</description>
          <addressOffset>0x24</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>mii_mode</name>
          <description>MII clock divider and premable enable</description>
          <addressOffset>0x28</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>mii_command</name>
          <description>MII control data, read and scan state</description>
          <addressOffset>0x2C</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>mii_address</name>
          <description>Physical layer bus address</description>
          <addressOffset>0x30</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>control_write</name>
          <description>Write data to MII physcial layer</description>
          <addressOffset>0x34</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>control_read</name>
          <description>Read data from MII physcial layer</description>
          <addressOffset>0x38</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>mii_state</name>
          <description>MII bus and link layer state</description>
          <addressOffset>0x3C</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x04</dimIncrement>
          <name>mac_address[%s]</name>
          <description>Media Access Control address</description>
          <addressOffset>0x40</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x04</dimIncrement>
          <name>hash[%s]</name>
          <description>Hash register</description>
          <addressOffset>0x48</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
        <register>
          <name>transmit_control</name>
          <description>Transmit control register</description>
          <addressOffset>0x50</addressOffset>
          <fields>
            <!-- todo: fields -->
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>USB</name>
      <description>Universal Serial Bus host</description>
      <baseAddress>0x20072000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <cluster>
          <name>capability</name>
          <description>Host Controller Capability Registers</description>
          <addressOffset>0x000</addressOffset>
        </cluster>
        <cluster>
          <name>operation</name>
          <description>Host Controller Operational Registers</description>
          <addressOffset>0x010</addressOffset>
        </cluster>
      </registers>
    </peripheral>
  </peripherals>
</device>
